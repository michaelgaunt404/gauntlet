newname1 = str_glue("{prefix}_count")
newname2 = str_glue("{prefix}_percent")
rename(tmp, !!newname1 := count, !!newname2 := percent)
}
}
data.frame(group = c(rep("A", 4), rep("B", 4))
,order = c(1:4, 1:4)) %>%
mutate(value = 2*order+rnorm(8, 5)) %>%
group_by(group) %>%
mutate(value_corrected = crrct0(value)
,count = 1)
data.frame(group = c(rep("A", 4), rep("B", 4))
,order = c(1:4, 1:4)) %>%
mutate(value = 2*order+rnorm(8, 5)) %>%
group_by(group) %>%
mutate(value_corrected = crrct0(value)
,count = 1) %>%
count_percent_zscore(grp_c = c(group), col = count, grp_p = c())
data.frame(group = c(rep("A", 4), rep("B", 4))
,order = c(1:4, 1:4)) %>%
mutate(value = 2*order+rnorm(8, 5)) %>%
group_by(group) %>%
mutate(value_corrected = crrct0(value)
,count = 1) %>%
count_percent_zscore(grp_c = c(group), col = order, grp_p = c())
data.frame(group = c(rep("A", 4), rep("B", 4))
,order = c(1:4, 1:4)) %>%
mutate(value = 2*order+rnorm(8, 5)) %>%
group_by(group) %>%
mutate(value_corrected = crrct0(value)
,count = 1) %>%
count_percent_zscore(grp_c = c(group), col = value, grp_p = c())
data =
data.frame(group = c(rep("A", 4), rep("B", 4))
,order = c(1:4, 1:4)) %>%
mutate(value = 2*order+rnorm(8, 5)) %>%
group_by(group) %>%
mutate(value_corrected = crrct0(value)
,count = 1)
grp_c = c(group)
quick_mean = function(data, col) {
.data[[col]]
}
quick_mean(data, col = "order")
quick_mean = function(data, col) {
data[[col]]
}
quick_mean(data, col = "order")
quick_mean = function(data, col) {
data[[col]] %>%
mean()
}
quick_mean(data, col = "order")
quick_mean(data, col = "value")
count_percent_zscore = function(data, grp_c = ..., grp_p = ..., grp_z = ...,
col, prefix = NULL,
rnd = NULL, cntr_scl = FALSE){
#summarizing column has to be 'count'
tmp = data %>%
group_by(across({{grp_c}})) %>%
summarise(count = sum(data[[col]])) %>%
ungroup() %>%
group_by(across({{grp_p}})) %>%
mutate(percent = (data[[col]]/sum(data[[col]])) %>%
{ if (!is.null(rnd)) round(., rnd) else .}
) %>%
ungroup() %>%
{ if (cntr_scl) (.) %>%
group_by(across({{grp_z}})) %>%
mutate(zscore = as.vector(scale(data[[col]])))
else .}
if (is.null(prefix)){
tmp
} else {
newname1 = str_glue("{prefix}_count")
newname2 = str_glue("{prefix}_percent")
rename(tmp, !!newname1 := count, !!newname2 := percent)
}
}
count_percent_zscore(grp_c = c(group),
col = "value", grp_p = c())
count_percent_zscore(grp_c = c(group)
,grp_p = c()
,col = "value")
#automates aggregating counts and percents for different groupings of data
count_percent_zscore = function(data, grp_c = ..., grp_p = ..., grp_z = ...,
col, prefix = NULL,
rnd = NULL, cntr_scl = FALSE){
#summarizing column has to be 'count'
tmp = data %>%
group_by(across({{grp_c}})) %>%
summarise(count = sum({{col}})) %>%
ungroup() %>%
group_by(across({{grp_p}})) %>%
mutate(percent = ({{col}}/sum({{col}})) %>%
{ if (!is.null(rnd)) round(., rnd) else .}
) %>%
ungroup() %>%
{ if (cntr_scl) (.) %>%
group_by(across({{grp_z}})) %>%
mutate(zscore = as.vector(scale({{col}})))
else .}
if (is.null(prefix)){
tmp
} else {
newname1 = str_glue("{prefix}_count")
newname2 = str_glue("{prefix}_percent")
rename(tmp, !!newname1 := count, !!newname2 := percent)
}
}
count_percent_zscore(grp_c = c(group)
,grp_p = c()
# ,col = "value"
)
data =
data.frame(group1 = c(rep("A", 4), rep("B", 4))
,order1 = c(1:4, 1:4)) %>%
mutate(value1 = 2*order+rnorm(8, 5)) %>%
group_by(group) %>%
mutate(value_corrected = crrct0(value)
,count = 1) %>%
count_percent_zscore(grp_c = c(group), col = "value", grp_p = c())
data =
data.frame(group1 = c(rep("A", 4), rep("B", 4))
,order1 = c(1:4, 1:4)) %>%
mutate(value1 = 2*order+rnorm(8, 5)) %>%
group_by(group) %>%
mutate(value_corrected = crrct0(value)
,count = 1)
count_percent_zscore(data, grp_c = c(group1)
,grp_p = c()
# ,col = "value"
)
#automates aggregating counts and percents for different groupings of data
count_percent_zscore = function(data, grp_c = ..., grp_p = ..., grp_z = ...,
col, prefix = NULL,
rnd = NULL, cntr_scl = FALSE){
#summarizing column has to be 'count'
tmp = data %>%
group_by(across({{grp_c}})) %>%
summarise(count = sum({{col}})) %>%
ungroup() %>%
group_by(across({{grp_p}})) %>%
mutate(percent = ({{col}}/sum({{col}})) %>%
{ if (!is.null(rnd)) round(., rnd) else .}
) %>%
ungroup() %>%
{ if (cntr_scl) (.) %>%
group_by(across({{grp_z}})) %>%
mutate(zscore = as.vector(scale({{col}})))
else .}
if (is.null(prefix)){
tmp
} else {
newname1 = str_glue("{prefix}_count")
newname2 = str_glue("{prefix}_percent")
rename(tmp, !!newname1 := count, !!newname2 := percent)
}
}
data1 =
data.frame(group1 = c(rep("A", 4), rep("B", 4))
,order1 = c(1:4, 1:4)) %>%
mutate(value1 = 2*order+rnorm(8, 5)) %>%
group_by(group) %>%
mutate(value_corrected = crrct0(value)
,count = 1)
data1 %>%
count_percent_zscore(, grp_c = c(group1)
,grp_p = c()
# ,col = "value"
)
data1 %>%
count_percent_zscore(grp_c = c(group1)
,grp_p = c()
# ,col = "value"
)
data1
data1
data1 = data.frame(group1 = c(rep("A", 4), rep("B", 4))
,order1 = c(1:4, 1:4)) %>%
mutate(value1 = 2*order+rnorm(8, 5)) %>%
group_by(group1) %>%
mutate(value_corrected = crrct0(value)
,count = 1)
data1 = data.frame(group1 = c(rep("A", 4), rep("B", 4))
,order1 = c(1:4, 1:4)) %>%
mutate(value1 = 2*order1+rnorm(8, 5)) %>%
group_by(group1) %>%
mutate(value_corrected = crrct0(value1)
,count = 1)
data1
data1 = data.frame(group1 = c(rep("A", 4), rep("B", 4))
,order1 = c(1:4, 1:4)) %>%
mutate(value1 = 2*order1+rnorm(8, 5)) %>%
group_by(group1) %>%
mutate(value_corrected = crrct0(value1)
,count = 1) %>%
ungroup()
data1 %>%
count_percent_zscore(grp_c = c(group1)
,grp_p = c()
# ,col = "value"
)
data1
data1 %>%
count_percent_zscore(grp_c = c(group1)
,grp_p = c()
# ,col = "value"
)
#automates aggregating counts and percents for different groupings of data
count_percent_zscore = function(data, grp_c = ..., grp_p = ..., grp_z = ...,
col = count, prefix = NULL,
rnd = NULL, cntr_scl = FALSE){
tmp = data %>%
group_by(across({{grp_c}})) %>%
summarise(count = sum({{col}})) %>%
ungroup() %>%
group_by(across({{grp_p}})) %>%
mutate(percent = ({{col}}/sum({{col}})) %>%
{ if (!is.null(rnd)) round(., rnd) else .}
) %>%
ungroup() %>%
{ if (cntr_scl) (.) %>%
group_by(across({{grp_z}})) %>%
mutate(zscore = as.vector(scale({{col}})))
else .}
if (is.null(prefix)){
tmp
} else {
newname1 = str_glue("{prefix}_count")
newname2 = str_glue("{prefix}_percent")
rename(tmp, !!newname1 := count, !!newname2 := percent)
}
}
data1 %>%
count_percent_zscore(grp_c = c(group1)
,grp_p = c()
# ,col = "value"
)
#automates aggregating counts and percents for different groupings of data
count_percent_zscore = function(data, grp_c = ..., grp_p = ..., grp_z = ...,
col , prefix = NULL,
rnd = NULL, cntr_scl = FALSE){
tmp = data %>%
group_by(across({{grp_c}})) %>%
summarise(count = sum({{col}})) %>%
ungroup() %>%
group_by(across({{grp_p}})) %>%
mutate(percent = ({{col}}/sum({{col}})) %>%
{ if (!is.null(rnd)) round(., rnd) else .}
) %>%
ungroup() %>%
{ if (cntr_scl) (.) %>%
group_by(across({{grp_z}})) %>%
mutate(zscore = as.vector(scale({{col}})))
else .}
if (is.null(prefix)){
tmp
} else {
newname1 = str_glue("{prefix}_count")
newname2 = str_glue("{prefix}_percent")
rename(tmp, !!newname1 := count, !!newname2 := percent)
}
}
data1 %>%
count_percent_zscore(grp_c = c(group1)
,grp_p = c()
,col = count
)
data1 %>%
count_percent_zscore(grp_c = c(group1)
,grp_p = c()
,col = value1
)
#automates aggregating counts and percents for different groupings of data
count_percent_zscore = function(data, grp_c = ..., grp_p = ..., grp_z = ...,
col , prefix = NULL,
rnd = NULL, cntr_scl = FALSE){
tmp = data %>%
group_by(across({{grp_c}})) %>%
summarise(count = sum({{col}})) %>%
ungroup() %>%
group_by(across({{grp_p}})) %>%
mutate(percent = (count/sum(count)) %>%
{ if (!is.null(rnd)) round(., rnd) else .}
) %>%
ungroup() %>%
{ if (cntr_scl) (.) %>%
group_by(across({{grp_z}})) %>%
mutate(zscore = as.vector(scale(count)))
else .}
if (is.null(prefix)){
tmp
} else {
newname1 = str_glue("{prefix}_count")
newname2 = str_glue("{prefix}_percent")
rename(tmp, !!newname1 := count, !!newname2 := percent)
}
}
data1 %>%
count_percent_zscore(grp_c = c(group1)
,grp_p = c()
,col = value1
)
data1 %>%
count_percent_zscore(grp_c = c(group1)
,grp_p = c()
,col = count
)
data1 %>%
count_percent_zscore(grp_c = c(group1)
,grp_p = c()
,col = count
)
data1 %>%
count_percent_zscore(grp_c = c(group1)
,grp_p = c()
,col = count
)
str(c(1, 2))
str(list(1, 2))
#' @param grp_z a vector of columns to group zscore calculation operation with - do not quote columns
#' @param col a column to count or sum - do not quote column
#' @param prefix a string used to prefix calculated columns with - leave empty if you do not want a prefix
#' @param rnd integer indcating how many digits you want calculated columns to be rounded to - leave empty if you do not want rounding
#' @param cntr_scl (`TRUE`/`FALSE`) boolean to indicate if zscore should be calculated - default is `FALSE`
#'
#' @return a dataframe
#' @export
#'
#' @examples
count_percent_zscore = function(data, grp_c = ..., grp_p = ..., grp_z = ...,
col , prefix = NULL,
rnd = NULL, cntr_scl = FALSE){
tmp = data %>%
group_by(across({{grp_c}})) %>%
summarise(count = sum({{col}})) %>%
ungroup() %>%
group_by(across({{grp_p}})) %>%
mutate(percent = (count/sum(count)) %>%
{ if (!is.null(rnd)) round(., rnd) else .}
) %>%
ungroup() %>%
{ if (cntr_scl) (.) %>%
group_by(across({{grp_z}})) %>%
mutate(zscore = as.vector(scale(count)))
else .}
if (is.null(prefix)){
tmp
} else {
newname1 = str_glue("{prefix}_count")
newname2 = str_glue("{prefix}_percent")
rename(tmp, !!newname1 := count, !!newname2 := percent)
}
}
#' @param grp_z a vector of columns to group zscore calculation operation with - do not quote columns
#' @param col a column to count or sum - do not quote column
#' @param prefix a string used to prefix calculated columns with - leave empty if you do not want a prefix
#' @param rnd integer indcating how many digits you want calculated columns to be rounded to - leave empty if you do not want rounding
#' @param cntr_scl (`TRUE`/`FALSE`) boolean to indicate if zscore should be calculated - default is `FALSE`
#'
#' @return a dataframe
#' @export
#'
#' @examples
temp_data = data.frame(group1 = c(rep("A", 4), rep("B", 4))
,order1 = c(1:4, 1:4)) %>%
mutate(value1 = 2*order1+rnorm(8, 5)) %>%
group_by(group1) %>%
mutate(value_corrected = crrct0(value1)) %>%
ungroup()
#' @param grp_z a vector of columns to group zscore calculation operation with - do not quote columns
#' @param col a column to count or sum - do not quote column
#' @param prefix a string used to prefix calculated columns with - leave empty if you do not want a prefix
#' @param rnd integer indcating how many digits you want calculated columns to be rounded to - leave empty if you do not want rounding
#' @param cntr_scl (`TRUE`/`FALSE`) boolean to indicate if zscore should be calculated - default is `FALSE`
#'
#' @return a dataframe
#' @export
#'
#' @examples
temp_data = data.frame(group1 = c(rep("A", 4), rep("B", 4))
,order1 = c(1:4, 1:4)) %>%
mutate(value1 = 2*order1+rnorm(8, 5)) %>%
group_by(group1) %>%
mutate(value_corrected = crrct0(value1)
,count1 = 1) %>%
ungroup()
temp_data
count_percent_zscore(data1, grp_c = c(group1), grp_p = c(), col = count)
#' @param grp_z a vector of columns to group zscore calculation operation with - do not quote columns
#' @param col a column to count or sum - do not quote column
#' @param prefix a string used to prefix calculated columns with - leave empty if you do not want a prefix
#' @param rnd integer indcating how many digits you want calculated columns to be rounded to - leave empty if you do not want rounding
#' @param cntr_scl (`TRUE`/`FALSE`) boolean to indicate if zscore should be calculated - default is `FALSE`
#'
#' @return a dataframe
#' @export
#'
#' @examples
temp_data = data.frame(group1 = c(rep("A", 4), rep("B", 4))
,order1 = c(1:4, 1:4)) %>%
mutate(value1 = 2*order1+rnorm(8, 5),count1 = 1)
count_percent_zscore(data1, grp_c = c(group1), grp_p = c(), col = count)
#' @param grp_z a vector of columns to group zscore calculation operation with - do not quote columns
#' @param col a column to count or sum - do not quote column
#' @param prefix a string used to prefix calculated columns with - leave empty if you do not want a prefix
#' @param rnd integer indcating how many digits you want calculated columns to be rounded to - leave empty if you do not want rounding
#' @param cntr_scl (`TRUE`/`FALSE`) boolean to indicate if zscore should be calculated - default is `FALSE`
#'
#' @return a dataframe
#' @export
#'
#' @examples
temp_data = data.frame(group = c(rep("A", 4), rep("B", 4))
,order = c(1:4, 1:4)) %>%
mutate(value = 2*order+rnorm(8, 5)
,count = 1)
count_percent_zscore(temp_data, grp_c = c(group), grp_p = c(), col = count)
count_percent_zscore(data1, grp_c = c(order1), grp_p = c(), col = value)
temp_data
count_percent_zscore(data1, grp_c = c(order), grp_p = c(), col = value)
count_percent_zscore(temp_data, grp_c = c(order), grp_p = c(), col = value)
#'
#' @examples
#'temp_data = data.frame(group = c(rep("A", 4), rep("B", 4))
#'                       ,order = c(1:4, 1:4)) %>%
#'  mutate(value = 2*order+rnorm(8, 5)
#'         ,count = 1)
#'
#'count_percent_zscore(temp_data, grp_c = c(group), grp_p = c(), col = count)
#'
#'count_percent_zscore(temp_data, grp_c = c(order), grp_p = c(), col = value)
count_percent_zscore = function(data, grp_c = ..., grp_p = ..., grp_z = ...,
col , prefix = NULL, rnd = NULL, cntr_scl = FALSE){
tmp = data %>%
group_by(across({{grp_c}})) %>%
summarise(count = sum({{col}})) %>%
ungroup() %>%
group_by(across({{grp_p}})) %>%
mutate(percent = (count/sum(count)) %>%
{ if (!is.null(rnd)) round(., rnd) else .}
) %>%
ungroup() %>%
{ if (cntr_scl) (.) %>%
group_by(across({{grp_z}})) %>%
mutate(zscore = as.vector(scale(count)))
else .}
if (is.null(prefix)){
tmp
} else {
newname1 = str_glue("{prefix}_count")
newname2 = str_glue("{prefix}_percent")
rename(tmp, !!newname1 := count, !!newname2 := percent)
}
}
devtools::document()
devtools::install()
devtools::document()
devtools::document()
devtools::install()
devtools::document()
devtools::install()
library(gauntlet)
library(tidyverse)
temp_data = data.frame(group = c(rep("A", 4), rep("B", 4))
,order = c(1:4, 1:4)) %>%
mutate(value = 2*order+rnorm(8, 5)
,count = 1)
count_percent_zscore(temp_data, grp_c = c(group), grp_p = c(), col = count)
count_percent_zscore(temp_data, grp_c = c(order), grp_p = c(), col = value)
Sys.Date()
library(tidyverse)
plot(mtcars)
plot(mtcars)
plot(mtcars[,c1:4])
plot(mtcars[,c(1:4)])
plot(mtcars[,c(1:3)])
plot(mtcars[,c(4:6)])
plot(mtcars[,c(4:6)])
plot(mtcars[,c(1:3)])
devtools::document()
devtools::install()
gauntlet
gauntlet::make_new_rmd(folder = "r", file_name = "test.Rmd")
devtools::document()
devtools::install()
markdown_folder = "analysis/"
markdown_name = 'test'
markdown_path_rmd = stringr::str_glue("{markdown_folder}{markdown_name}.Rmd") %>%
here()
library(tidyverse)
stringr::str_glue("{markdown_folder}{markdown_name}.Rmd") %>%
here()
library(here)
stringr::str_glue("{markdown_folder}{markdown_name}.Rmd") %>%
here()
markdown_folder = "analysis"
markdown_path_rmd = stringr::str_glue("{markdown_folder}/{markdown_name}.Rmd") %>%
here()
markdown_path_rmd
dashboard_name = "dashboard"
dashboard_name = 'test'
stringr::str_glue("{dashboard_folder}/{dashboard_name}.Rmd")
dashboard_name = "dashboard"
stringr::str_glue("{dashboard_folder}/{dashboard_name}.Rmd")
dashboard_folder = "dashboard"
stringr::str_glue("{dashboard_folder}/{dashboard_name}.Rmd")
stringr::str_glue("{dashboard_folder}{dashboard_name}.html")
devtools::document()
devtools::document()
devtools::install()
