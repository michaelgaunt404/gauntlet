[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 gauntlet authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/easy_package_development.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"easy_package_development","text":"Developing R packages can meticulous task, requiring attention details like properly declaring function imports ensuring script names match contained functions. simplify tasks, ’ve developed set convenience functions automate parts package development process. creating R packages, ’s also crucial document function using Roxygen comments. documentation helps users understand functionality functions ensures package correctly imports necessary functions. maintaining thorough Roxygen documentation, ensure clarity users correctness function imports. Yay documentation!!","code":""},{"path":"/articles/easy_package_development.html","id":"functions","dir":"Articles","previous_headings":"","what":"Functions","title":"easy_package_development","text":"functions ’ll using: checkPkg_add_pkgFnctns_links: Scans R script function calls package qualifiers replaces unqualified function calls fully qualified notation [package]::[function]. checkPkg_scrpt_fnctn_names: Checks script names function names directory ensure match provides summary functions contained script. checkPkg_make_importFrom_fnctn_statments: Analyzes script detect package::function notation generates @importFrom statements package detected. ’ll show use functions later tutorial.","code":""},{"path":"/articles/easy_package_development.html","id":"preparation","dir":"Articles","previous_headings":"","what":"Preparation","title":"easy_package_development","text":"Load packages need walk . also make function create number temporary scripts. Let’s create fake temporary repository directory fake functions use examples. Take look example functions just made temp directory.","code":"# Load necessary libraries library(dplyr) library(stringr) library(DescTools) library(purrr)  # Function to create temporary R scripts with matching function names create_temp_scripts <- function(directory) {   for (i in 1:3) {     script_name <- file.path(directory, paste0(\"function\", i, \".R\"))     function_name <- paste0(\"function\", i)     function_code <- paste0(function_name, \" <- function() {\\n  # Placeholder function\\n}\\n\")     writeLines(function_code, script_name)   } } # Create a temporary directory temp_dir <- tempdir(check = T) temp_sub_dir <- file.path(temp_dir, \"R\") dir.create(temp_sub_dir)  # Create example script content temp_script_long = \"process_mtcars = function(){   mtcars %>%     mutate(       var_1 = Quantile(disp, probs = .6),       var_2 = str_glue('{disp} {hp}'),       var_3 = case_when(hp>median(hp)~'Big', T~'Small')     ) %>%      select(mpg, starts_with('var_')) %>%      arrange(mpg) }\"  temp_script_too_many_functions = ' temp_function_1 = function(){   print(\"hello\") }  temp_function_2 = function(){   print(\"I should be in my own script!\") } '  # Write the example script to a temporary file temp_script <- tempfile(fileext = \".R\")  temp_script_long_path = here::here(temp_sub_dir, \"process_mtcars.R\") writeLines(   temp_script_long   ,temp_script_long_path)  temp_script_too_many_functions_path = here::here(temp_sub_dir, \"temp_function_1.R\") writeLines(   temp_script_too_many_functions   ,temp_script_too_many_functions_path)  # Create temporary R scripts with matching function names create_temp_scripts(temp_sub_dir) list.files(temp_sub_dir) #> [1] \"function1.R\"       \"function2.R\"       \"function3.R\"       #> [4] \"process_mtcars.R\"  \"temp_function_1.R\""},{"path":[]},{"path":"/articles/easy_package_development.html","id":"checkpkg_scrpt_fnctn_names","dir":"Articles","previous_headings":"Using the Functions","what":"checkPkg_scrpt_fnctn_names","title":"easy_package_development","text":"First, let’s use checkPkg_scrpt_fnctn_names function. function checks scripts hold functions correct script name function name relationship. also provides good snapshot state functions directory relate . things point regarding function output: First, output tidy dataframe detailing script functions inside (additional data). generally want avoid really muddies waters functions live package/repo. number_functions performs similar purpose indicates actual number functions given script. name_match indicates least one function script name script. Using table, can make changes functions scripts better organize repo. Running function good practice ensure scripts properly organized get overview functions directory.","code":"# Check the script and function names using the provided function result <- checkPkg_scrpt_fnctn_names(temp_sub_dir)  # Print the result print(result) #>   multiple_functions number_functions name_match     script_name #> 1              FALSE                1       TRUE       function1 #> 2              FALSE                1       TRUE       function2 #> 3              FALSE                1       TRUE       function3 #> 4              FALSE                1       TRUE  process_mtcars #> 5               TRUE                2       TRUE temp_function_1 #> 6               TRUE                2       TRUE temp_function_1 #>    function_names #> 1       function1 #> 2       function2 #> 3       function3 #> 4  process_mtcars #> 5 temp_function_1 #> 6 temp_function_2"},{"path":"/articles/easy_package_development.html","id":"checkpkg_add_pkgfnctns_links","dir":"Articles","previous_headings":"Using the Functions","what":"checkPkg_add_pkgFnctns_links","title":"easy_package_development","text":"Next, ’ll use checkPkg_add_pkgFnctns_links function. function checks function script see requires package declaration based current environment. function identifies unqualified function calls replaces correct [package]::[function] notation - lines changes appended #!!!! LINE CHANGED notify user. checkPkg_add_pkgFnctns_links identified correct missing package qualifiers, simply copy paste output function save corrections — otherwise, just delete . now save edited function corrected package declarations.","code":"# Check and add package function links result <- checkPkg_add_pkgFnctns_links(   temp_script_long_path ) #> ++++++++++++++++++++++++++++++++++++++++++++++++++ #> Total lines changed: 6 #> ++++++++++++++++++++++++++++++++++++++++++++++++++} #> process_mtcars = function(){ #>   mtcars %>% #>     dplyr::mutate(                      #!!!! LINE CHANGED #>       var_1 = DescTools::Quantile(disp, probs = .6),                      #!!!! LINE CHANGED #>       var_2 = stringr::str_glue('{disp} {hp}'),                      #!!!! LINE CHANGED #>       var_3 = dplyr::case_when(hp>median(hp)~'Big', T~'Small')                      #!!!! LINE CHANGED #>     ) %>%  #>     dplyr::select(mpg, dplyr::starts_with('var_')) %>%                       #!!!! LINE CHANGED #>     dplyr::arrange(mpg)                      #!!!! LINE CHANGED #> } temp_script_long = \"process_mtcars = function(){   mtcars %>%     dplyr::mutate(                             var_1 = DescTools::Quantile(disp, probs = .6),                             var_2 = stringr::str_glue('{disp} {hp}'),                             var_3 = dplyr::case_when(hp>median(hp)~'Big', T~'Small')                           ) %>%      dplyr::select(mpg, dplyr::starts_with('var_')) %>%                            dplyr::arrange(mpg)                       }\"  writeLines(   temp_script_long   ,temp_script_long_path)"},{"path":"/articles/easy_package_development.html","id":"checkpkg_make_importfrom_fnctn_statments","dir":"Articles","previous_headings":"Using the Functions","what":"checkPkg_make_importFrom_fnctn_statments","title":"easy_package_development","text":"Finally, ’ll use checkPkg_make_importFrom_fnctn_statments function. function generates @importFrom statements package detected script, essential proper documentation. run newly edited function process_mtcars.R. Running function ensures documentation properly defines packages functions, making easier manage dependencies. output can dropped right ROxygen documentation script.","code":"# Generate @importFrom statements checkPkg_make_importFrom_fnctn_statments(temp_script_long_path) #> Packages detected: #> #' @importFrom DescTools Quantile #> #' @importFrom dplyr arrange case_when mutate select starts_with #> #' @importFrom stringr str_glue #> #' @importFrom magrittr %>% temp_script_long = \" #' Process mtcars #' #' This function perfroms common mtcars processing. #' #' @return A numeric value or vector #' @export #' #' @importFrom dplyr mutate case_when select starts_with arrange #' @importFrom DescTools Quantile #' @importFrom stringr str_glue process_mtcars = function(){   mtcars %>%     dplyr::mutate(                             var_1 = DescTools::Quantile(disp, probs = .6),                             var_2 = stringr::str_glue('{disp} {hp}'),                             var_3 = dplyr::case_when(hp>median(hp)~'Big', T~'Small')                           ) %>%      dplyr::select(mpg, dplyr::starts_with('var_')) %>%                            dplyr::arrange(mpg)                       }' \"  writeLines(   temp_script_long   ,temp_script_long_path)"},{"path":"/articles/easy_package_development.html","id":"conculusion","dir":"Articles","previous_headings":"","what":"Conculusion","title":"easy_package_development","text":"functions designed streamline package development process automating common tasks can error-prone time-consuming. integrating tools workflow, can focus logic functionality package less tedious details. Feel free check full documentation source code GitHub visit personal blog tutorials insights. Happy coding!","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"package maintainer. Maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Gaunt M (2025). gauntlet: Personal helper functions. R package version 0.1.0, https://michaelgaunt404.github.io/gauntlet/.","code":"@Manual{,   title = {gauntlet: Personal helper functions},   author = {Mike Gaunt},   year = {2025},   note = {R package version 0.1.0},   url = {https://michaelgaunt404.github.io/gauntlet/}, }"},{"path":"/index.html","id":"gauntlet","dir":"","previous_headings":"","what":"Personal helper functions","title":"Personal helper functions","text":"R package provides set convenience functions designed streamline common operations data manipulation, string operations, package development. gauntlet package includes utilities handling string factor operations, general data manipulation, package development basic yet essential functions efficient workflow management.","code":""},{"path":"/index.html","id":"intent-of-this-package","dir":"","previous_headings":"","what":"Intent of this package:","title":"Personal helper functions","text":"gauntlet package aims simplify enhance productivity providing collection utility functions. reduces need repetitive code offering well-defined functions frequent tasks, thus improving workflow efficiency consistency.","code":""},{"path":"/index.html","id":"what-you-can-do-with-this-package","dir":"","previous_headings":"","what":"What you can do with this package:","title":"Personal helper functions","text":"✔️ Perform common string operations, including advanced sorting manipulation✔️ Order factor levels based numerical values rather counts✔️ Access variety utilities package development✔️ Utilize basic yet powerful data manipulation functions","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Personal helper functions","text":"Install development version GitHub:","code":"# install.packages(\"devtools\")  devtools::install_github(\"michaelgaunt404/gauntlet\")"},{"path":"/reference/auto_make_lag_col.html","id":null,"dir":"Reference","previous_headings":"","what":"Make multiple lagged columns. — auto_make_lag_col","title":"Make multiple lagged columns. — auto_make_lag_col","text":"Makes lagged column(s) dataframe column defined user.","code":""},{"path":"/reference/auto_make_lag_col.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make multiple lagged columns. — auto_make_lag_col","text":"","code":"auto_make_lag_col(col, lags = c(1, 7))"},{"path":"/reference/auto_make_lag_col.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make multiple lagged columns. — auto_make_lag_col","text":"col column make lags lags numeric list","code":""},{"path":"/reference/auto_make_lag_col.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make multiple lagged columns. — auto_make_lag_col","text":"dataframe lagged column(s)","code":""},{"path":"/reference/auto_make_lag_col.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make multiple lagged columns. — auto_make_lag_col","text":"","code":"if (FALSE) { # \\dontrun{ data.frame(index = 1:10, value1 = rnorm(10), value2 = rnorm(10)) %>% mutate(auto_make_lag_col(col = value1, c(1, 3, 5))) } # }"},{"path":"/reference/auto_make_rMean_col.html","id":null,"dir":"Reference","previous_headings":"","what":"Make multiple rolling mean functions. — auto_make_rMean_col","title":"Make multiple rolling mean functions. — auto_make_rMean_col","text":"Makes rolling mean column(s) dataframe column defined user using window sizes also defined user.","code":""},{"path":"/reference/auto_make_rMean_col.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make multiple rolling mean functions. — auto_make_rMean_col","text":"","code":"auto_make_rMean_col(col, width = c(7))"},{"path":"/reference/auto_make_rMean_col.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make multiple rolling mean functions. — auto_make_rMean_col","text":"col column make rolling means width integer input indicating size sliding window used caluclate mean","code":""},{"path":"/reference/auto_make_rMean_col.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make multiple rolling mean functions. — auto_make_rMean_col","text":"dataframe rolling mean column(s)S","code":""},{"path":"/reference/auto_make_rMean_col.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make multiple rolling mean functions. — auto_make_rMean_col","text":"","code":"if (FALSE) { # \\dontrun{ df = data.frame(index = 1:10, value1 = rnorm(10), value2 = rnorm(10))  dplyr::mutate(df, auto_make_rMean_col(col = value1, width = c(3, 7)))  } # }"},{"path":"/reference/checkPkg_add_pkgFnctns_links.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Package Qualifiers to Functions in a Script — checkPkg_add_pkgFnctns_links","title":"Add Package Qualifiers to Functions in a Script — checkPkg_add_pkgFnctns_links","text":"function scans provided R script function calls package qualifiers based packages currently loaded session. finds unqualified function calls, replaces fully qualified notation [package]::[function].","code":""},{"path":"/reference/checkPkg_add_pkgFnctns_links.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Package Qualifiers to Functions in a Script — checkPkg_add_pkgFnctns_links","text":"","code":"checkPkg_add_pkgFnctns_links(script)"},{"path":"/reference/checkPkg_add_pkgFnctns_links.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Package Qualifiers to Functions in a Script — checkPkg_add_pkgFnctns_links","text":"script character string specifying path R script file.","code":""},{"path":"/reference/checkPkg_add_pkgFnctns_links.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add Package Qualifiers to Functions in a Script — checkPkg_add_pkgFnctns_links","text":"function uses session information identify packages loaded functions contain. reads script, identifies non-qualified function calls, replaces qualified counterparts match found loaded packages.","code":""},{"path":"/reference/checkPkg_add_pkgFnctns_links.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Package Qualifiers to Functions in a Script — checkPkg_add_pkgFnctns_links","text":"","code":"library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union library(stringr) library(DescTools)  ex_script <- \"mtcars %>%   mutate(   var_1 = Quantile(disp, probs = .6),          var_2 = str_glue('{disp} {hp}'))\"  # Write the example script to a temporary file temp_script <- tempfile(fileext = \".R\") writeLines(ex_script, temp_script) checkPkg_add_pkgFnctns_links(temp_script) #> ++++++++++++++++++++++++++++++++++++++++++++++++++ #> Total lines changed: 3 #> ++++++++++++++++++++++++++++++++++++++++++++++++++} #> mtcars %>% #>   dplyr::mutate(                      #!!!! LINE CHANGED #>   var_1 = DescTools::Quantile(disp, probs = .6),                      #!!!! LINE CHANGED #>          var_2 = stringr::str_glue('{disp} {hp}'))                      #!!!! LINE CHANGED #> [1] \"mtcars %>%\\n  dplyr::mutate(                      #!!!! LINE CHANGED\\n  var_1 = DescTools::Quantile(disp, probs = .6),                      #!!!! LINE CHANGED\\n         var_2 = stringr::str_glue('{disp} {hp}'))                      #!!!! LINE CHANGED\""},{"path":"/reference/checkPkg_make_importFrom_fnctn_statments.html","id":null,"dir":"Reference","previous_headings":"","what":"Add @importFrom Statements Based on Script Dependencies — checkPkg_make_importFrom_fnctn_statments","title":"Add @importFrom Statements Based on Script Dependencies — checkPkg_make_importFrom_fnctn_statments","text":"function analyzes given script detect functions used `package::function` notation. generates `@importFrom` statements package detected, capturing required dependencies script.","code":""},{"path":"/reference/checkPkg_make_importFrom_fnctn_statments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add @importFrom Statements Based on Script Dependencies — checkPkg_make_importFrom_fnctn_statments","text":"","code":"checkPkg_make_importFrom_fnctn_statments(script)"},{"path":"/reference/checkPkg_make_importFrom_fnctn_statments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add @importFrom Statements Based on Script Dependencies — checkPkg_make_importFrom_fnctn_statments","text":"script character string specifying path R script file.","code":""},{"path":"/reference/checkPkg_make_importFrom_fnctn_statments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add @importFrom Statements Based on Script Dependencies — checkPkg_make_importFrom_fnctn_statments","text":"function generates prints `@importFrom` statements package detected script.","code":""},{"path":"/reference/checkPkg_make_importFrom_fnctn_statments.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add @importFrom Statements Based on Script Dependencies — checkPkg_make_importFrom_fnctn_statments","text":"","code":"ex_script <- \"mtcars %>%    dplyr::mutate(      var_1 = DescTools::Quantile(disp, probs = .6),      var_2 = str_glue('{disp} {hp}')    ) %>%    dplyr::arrange(disp)\" temp_script <- tempfile(fileext = \".R\") writeLines(ex_script, temp_script) checkPkg_make_importFrom_fnctn_statments(temp_script) #> Packages detected: #> #' @importFrom DescTools Quantile #> #' @importFrom dplyr arrange mutate #> #' @importFrom magrittr %>%"},{"path":"/reference/checkPkg_scrpt_fnctn_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Script and Function Names in a Package Directory — checkPkg_scrpt_fnctn_names","title":"Check Script and Function Names in a Package Directory — checkPkg_scrpt_fnctn_names","text":"convenience function helps encourage package development performing automated check ensure script names match function names contained within . also counts number functions script returns table listing scripts, functions inside script, whether script name matches function name, multiple functions script.","code":""},{"path":"/reference/checkPkg_scrpt_fnctn_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Script and Function Names in a Package Directory — checkPkg_scrpt_fnctn_names","text":"","code":"checkPkg_scrpt_fnctn_names(directory)"},{"path":"/reference/checkPkg_scrpt_fnctn_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Script and Function Names in a Package Directory — checkPkg_scrpt_fnctn_names","text":"directory character string specifying path directory containing R scripts.","code":""},{"path":"/reference/checkPkg_scrpt_fnctn_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check Script and Function Names in a Package Directory — checkPkg_scrpt_fnctn_names","text":"data frame following columns: multiple_functions Logical, indicating multiple functions script. number_functions Integer, number functions script. name_match Logical, indicating script name matches function name inside . script_name Character, name script without \".R\" extension. function_names Character, names functions found inside script.","code":""},{"path":"/reference/checkPkg_scrpt_fnctn_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check Script and Function Names in a Package Directory — checkPkg_scrpt_fnctn_names","text":"","code":"if (FALSE) { # \\dontrun{ # Load necessary libraries library(purrr) library(dplyr) library(stringr)  # Function to create temporary R scripts with matching function names create_temp_scripts <- function(directory) {   for (i in 1:3) {     script_name <- file.path(directory, paste0(\"function\", i, \".R\"))     function_name <- paste0(\"function\", i)     function_code <- paste0(function_name, \" <- function() {\\n  # Placeholder function\\n}\\n\")     writeLines(function_code, script_name)   } }  # Create a temporary directory temp_dir <- tempdir() temp_sub_dir <- file.path(temp_dir, \"temporary_directory_one\") dir.create(temp_sub_dir)  # Create temporary R scripts with matching function names create_temp_scripts(temp_sub_dir)  # Check the script and function names using the provided function result <- checkPkg_scrpt_fnctn_names(temp_sub_dir)  # Print the result print(result) } # }"},{"path":"/reference/check_dir_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Check and create a directory path — check_dir_path","title":"Check and create a directory path — check_dir_path","text":"function checks directory path exists creates .","code":""},{"path":"/reference/check_dir_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check and create a directory path — check_dir_path","text":"","code":"check_dir_path(dir_path)"},{"path":"/reference/check_dir_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check and create a directory path — check_dir_path","text":"dir_path string specifying path directory check create necessary.","code":""},{"path":"/reference/check_dir_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check and create a directory path — check_dir_path","text":"None","code":""},{"path":"/reference/check_dir_path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check and create a directory path — check_dir_path","text":"","code":"if (FALSE) { # \\dontrun{ check_dir_path(\"data/raw\") check_dir_path(\"data/processed\") } # }"},{"path":"/reference/count_percent_zscore.html","id":null,"dir":"Reference","previous_headings":"","what":"Group by count, sum, percent and zscore. — count_percent_zscore","title":"Group by count, sum, percent and zscore. — count_percent_zscore","text":"function can used perform number mathematical operation dataframe. Count sum numerical values group, get percent breakdown counts sums group, get optional zscore values.","code":""},{"path":"/reference/count_percent_zscore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group by count, sum, percent and zscore. — count_percent_zscore","text":"","code":"count_percent_zscore(   data,   grp_c = ...,   grp_p = ...,   grp_z = ...,   col,   prefix = NULL,   rnd = NULL,   cntr_scl = FALSE )"},{"path":"/reference/count_percent_zscore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group by count, sum, percent and zscore. — count_percent_zscore","text":"data dataframe grp_c vector columns group counting operation - quote columns grp_p vector columns group percent calculation operation - quote columns grp_z vector columns group zscore calculation operation - quote columns col column count sum - quote column prefix string used prefix calculated columns - leave empty want prefix rnd integer indicating many digits want calculated columns rounded - leave empty want rounding cntr_scl (`TRUE`/`FALSE`) boolean indicate zscore calculated - default `FALSE`","code":""},{"path":"/reference/count_percent_zscore.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Group by count, sum, percent and zscore. — count_percent_zscore","text":"dataframe","code":""},{"path":"/reference/count_percent_zscore.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Group by count, sum, percent and zscore. — count_percent_zscore","text":"","code":"if (FALSE) { # \\dontrun{ temp_data = data.frame(group = c(rep(\"A\", 4), rep(\"B\", 4))                       ,order = c(1:4, 1:4)) %>%  mutate(value = 2*order+rnorm(8, 5)         ,count = 1)  count_percent_zscore(temp_data, grp_c = c(group), grp_p = c(), col = count)  count_percent_zscore(temp_data, grp_c = c(order), grp_p = c(), col = value) } # }"},{"path":"/reference/count_percent_zscore_dt.html","id":null,"dir":"Reference","previous_headings":"","what":"Group by count, sum, percent and zscore - datatable variant. — count_percent_zscore_dt","title":"Group by count, sum, percent and zscore - datatable variant. — count_percent_zscore_dt","text":"function can used perform number mathematical operation datatable. Count sum numerical values group, get percent breakdown counts sums group, get optional zscore values.","code":""},{"path":"/reference/count_percent_zscore_dt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group by count, sum, percent and zscore - datatable variant. — count_percent_zscore_dt","text":"","code":"count_percent_zscore_dt(   data,   grp_c = ...,   grp_p = ...,   grp_z = ...,   col,   prefix = NULL,   rnd = NULL,   cntr_scl = FALSE )"},{"path":"/reference/count_percent_zscore_dt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group by count, sum, percent and zscore - datatable variant. — count_percent_zscore_dt","text":"data datatable grp_c vector columns group counting operation - quote columns grp_p vector columns group percent calculation operation - quote columns grp_z vector columns group zscore calculation operation - quote columns col string indicating column count sum prefix string used prefix calculated columns - leave empty want prefix rnd integer indicating many digits want calculated columns rounded - leave empty want rounding cntr_scl (`TRUE`/`FALSE`) boolean indicate zscore calculated - default `FALSE`","code":""},{"path":"/reference/count_percent_zscore_dt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Group by count, sum, percent and zscore - datatable variant. — count_percent_zscore_dt","text":"datatable","code":""},{"path":"/reference/count_percent_zscore_dt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Group by count, sum, percent and zscore - datatable variant. — count_percent_zscore_dt","text":"","code":"if (FALSE) { # \\dontrun{ palmerpenguins::penguins %>% mutate(count = 1       ,zcount = 2) %>%  data.table() %>%  count_percent_zscore_dt(    grp_c = c(\"species\", \"year\")    ,grp_p = c(\"species\")    ,col = \"count\"  ) %>%  print()  } # }"},{"path":"/reference/crrct0.html","id":null,"dir":"Reference","previous_headings":"","what":"Rescale a vector with first entry. — crrct0","title":"Rescale a vector with first entry. — crrct0","text":"Use function rescale vector using first entry","code":""},{"path":"/reference/crrct0.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rescale a vector with first entry. — crrct0","text":"","code":"crrct0(x)"},{"path":"/reference/crrct0.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rescale a vector with first entry. — crrct0","text":"x numeric vector","code":""},{"path":"/reference/crrct0.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rescale a vector with first entry. — crrct0","text":"numeric vector","code":""},{"path":"/reference/crrct0.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rescale a vector with first entry. — crrct0","text":"","code":"if (FALSE) { # \\dontrun{ data.frame(group = c(rep(\"A\", 4), rep(\"B\", 4))           ,order = c(1:4, 1:4)) %>%  mutate(value = 2*order+rnorm(8, 5)) %>%  group_by(group) %>%  mutate(value_corrected = crrct0(value))  } # }"},{"path":"/reference/detail_R_scripts.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract and Summarize Script Metadata from R Scripts — detail_R_scripts","title":"Extract and Summarize Script Metadata from R Scripts — detail_R_scripts","text":"function searches specified directory R scripts extracts metadata top script. metadata includes script's description, author, additional details (referred README information).","code":""},{"path":"/reference/detail_R_scripts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract and Summarize Script Metadata from R Scripts — detail_R_scripts","text":"","code":"detail_R_scripts(dir)"},{"path":"/reference/detail_R_scripts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract and Summarize Script Metadata from R Scripts — detail_R_scripts","text":"dir character string specifying directory search R scripts. function look files `.R` extension within directory.","code":""},{"path":"/reference/detail_R_scripts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract and Summarize Script Metadata from R Scripts — detail_R_scripts","text":"data frame following columns: dir directory script located. script name script file. author author script, extracted script's metadata. description high-level description script , extracted   script's metadata. details Additional details README information script,   extracted script's metadata.","code":""},{"path":"/reference/detail_R_scripts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract and Summarize Script Metadata from R Scripts — detail_R_scripts","text":"**Note:** metadata must follow specific format prescribed 'gauntlet' package, function part . function assumes format used consistent prescribed structure. format listed example.","code":""},{"path":"/reference/detail_R_scripts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract and Summarize Script Metadata from R Scripts — detail_R_scripts","text":"","code":"if (FALSE) { # \\dontrun{ # Create an example R script with the specific metadata format script_content <-   \"#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~    #    # DESC: A high-level description of what this script does.    #    # By: mike gaunt, michael.gaunt@throwaway.com    #    # README: Additional details re/ script    #-------- [[insert brief readme here]]    #    # *please use 80 character margins    #    #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~    mtcars %>% print\"  # Write the script to the temporary directory temp_dir = tempdir() writeLines(script_content, file.path(temp_dir, \"example_script.R\"))  # Run the describe_R_scripts function on the temporary directory detail_R_scripts(temp_dir) } # }"},{"path":"/reference/dgt0.html","id":null,"dir":"Reference","previous_headings":"","what":"Round to 0 digits — dgt0","title":"Round to 0 digits — dgt0","text":"Use function round vector.","code":""},{"path":"/reference/dgt0.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Round to 0 digits — dgt0","text":"","code":"dgt0(x)"},{"path":"/reference/dgt0.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Round to 0 digits — dgt0","text":"x numeric vector","code":""},{"path":"/reference/dgt0.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Round to 0 digits — dgt0","text":"numeric vector","code":""},{"path":"/reference/dgt0.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Round to 0 digits — dgt0","text":"","code":"dgt0(rnorm(10)) #>  [1] -1  0 -2  0  1  1 -2  0  0  0"},{"path":"/reference/dgt1.html","id":null,"dir":"Reference","previous_headings":"","what":"Round to 1 digits — dgt1","title":"Round to 1 digits — dgt1","text":"Use function round vector.","code":""},{"path":"/reference/dgt1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Round to 1 digits — dgt1","text":"","code":"dgt1(x)"},{"path":"/reference/dgt1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Round to 1 digits — dgt1","text":"x numeric vector","code":""},{"path":"/reference/dgt1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Round to 1 digits — dgt1","text":"numeric vector","code":""},{"path":"/reference/dgt1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Round to 1 digits — dgt1","text":"","code":"dgt1(rnorm(10)) #>  [1] -0.6  0.6  2.1 -1.6  0.5 -1.9 -0.5 -0.1  0.5 -0.9"},{"path":"/reference/dgt2.html","id":null,"dir":"Reference","previous_headings":"","what":"Round to 2 digits — dgt2","title":"Round to 2 digits — dgt2","text":"Use function round vector.","code":""},{"path":"/reference/dgt2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Round to 2 digits — dgt2","text":"","code":"dgt2(x)"},{"path":"/reference/dgt2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Round to 2 digits — dgt2","text":"x numeric vector","code":""},{"path":"/reference/dgt2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Round to 2 digits — dgt2","text":"numeric vector","code":""},{"path":"/reference/dgt2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Round to 2 digits — dgt2","text":"","code":"dgt2(rnorm(10)) #>  [1]  0.47  0.36 -1.30  0.74  1.89 -0.10 -0.94 -0.02 -0.83 -1.51"},{"path":"/reference/dgt3.html","id":null,"dir":"Reference","previous_headings":"","what":"Round to 3 digits — dgt3","title":"Round to 3 digits — dgt3","text":"Use function round vector.","code":""},{"path":"/reference/dgt3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Round to 3 digits — dgt3","text":"","code":"dgt3(x)"},{"path":"/reference/dgt3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Round to 3 digits — dgt3","text":"x numeric vector","code":""},{"path":"/reference/dgt3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Round to 3 digits — dgt3","text":"numeric vector","code":""},{"path":"/reference/dgt3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Round to 3 digits — dgt3","text":"","code":"dgt3(rnorm(10)) #>  [1]  0.935  0.176  0.244  1.624  0.112 -0.134 -1.910 -0.279 -0.313  1.067"},{"path":"/reference/flatten_named_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Flatten a named list — flatten_named_list","title":"Flatten a named list — flatten_named_list","text":"function takes named list input returns data frame two columns: name list element (including parent element names), corresponding value. input list, function returns data frame single row containing value parent name (provided).","code":""},{"path":"/reference/flatten_named_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flatten a named list — flatten_named_list","text":"","code":"flatten_named_list(lst, parent_name = \"\")"},{"path":"/reference/flatten_named_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flatten a named list — flatten_named_list","text":"lst named list flattened data frame. parent_name character string indicating name parent list element. argument optional provided input list child element larger parent list. default, parent name set empty string.","code":""},{"path":"/reference/flatten_named_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flatten a named list — flatten_named_list","text":"data frame two columns: name list element (including parent element names), corresponding value.","code":""},{"path":"/reference/flatten_named_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Flatten a named list — flatten_named_list","text":"","code":"test_list <- list(a = 1, b = list(c = 2, d = 3)) flatten_named_list(test_list) #>   name value #> 1    a     1 #> 2  b.c     2 #> 3  b.d     3"},{"path":"/reference/floor_divide.html","id":null,"dir":"Reference","previous_headings":"","what":"Floor divide a vector by some value. — floor_divide","title":"Floor divide a vector by some value. — floor_divide","text":"function can applied vector bin values floor divide value.","code":""},{"path":"/reference/floor_divide.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Floor divide a vector by some value. — floor_divide","text":"","code":"floor_divide(value, floor)"},{"path":"/reference/floor_divide.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Floor divide a vector by some value. — floor_divide","text":"value numeric value dataframe column floor divided floor value floor divide ","code":""},{"path":"/reference/floor_divide.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Floor divide a vector by some value. — floor_divide","text":"numeric value vector","code":""},{"path":"/reference/floor_divide.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Floor divide a vector by some value. — floor_divide","text":"","code":"temp_index = rnorm(10, 100, 100) floor_divide(temp_index, 5) #>  [1] 105  35  95  70 140 375 100 155 110 -95 floor_divide(temp_index, 50) #>  [1]  100    0   50   50  100  350  100  150  100 -100 floor_divide(temp_index, 100) #>  [1]  100    0    0    0  100  300  100  100  100 -100"},{"path":"/reference/gdrive_files_to_rds.html","id":null,"dir":"Reference","previous_headings":"","what":"Get and Save Files from Google Drive — gdrive_files_to_rds","title":"Get and Save Files from Google Drive — gdrive_files_to_rds","text":"function programmatically downloads CSV files stored Google Drive, saves temporarily CSV files, converts saves RDS objects. function designed work singular data frames one record . working larger data frames, can break singular records use `purrr::map` process .","code":""},{"path":"/reference/gdrive_files_to_rds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get and Save Files from Google Drive — gdrive_files_to_rds","text":"","code":"gdrive_files_to_rds(data_to_fetch, save_location, save_format = \".rds\")"},{"path":"/reference/gdrive_files_to_rds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get and Save Files from Google Drive — gdrive_files_to_rds","text":"data_to_fetch data frame containing information files fetch Google Drive. row represent file include columns 'id' (file ID Google Drive) 'name' (file name). save_location directory path downloaded files saved. save_format format save files. Default \".rds\".","code":""},{"path":"/reference/gdrive_files_to_rds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get and Save Files from Google Drive — gdrive_files_to_rds","text":"None (invisibly returns NULL)","code":""},{"path":"/reference/gdrive_files_to_rds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get and Save Files from Google Drive — gdrive_files_to_rds","text":"","code":"if (FALSE) { # \\dontrun{ # Provide the data frame with file information files_to_fetch <- data.frame(   id = c(\"file_id_1\", \"file_id_2\"),   name = c(\"file1.csv\", \"file2.csv\") )  # Specify the save location save_location <- \"path/to/save\"  # Get and save files from Google Drive gdrive_get_files(files_to_fetch, save_location) } # }"},{"path":"/reference/gdrive_send_rds_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Send RDS Files to Google Drive — gdrive_send_rds_files","title":"Send RDS Files to Google Drive — gdrive_send_rds_files","text":"function programmatically sends RDS files saved user-provided directory specified Google Drive location. RDS files converted CSV format uploaded Google Drive.","code":""},{"path":"/reference/gdrive_send_rds_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Send RDS Files to Google Drive — gdrive_send_rds_files","text":"","code":"gdrive_send_rds_files(folder_with_files, gdrive_folder)"},{"path":"/reference/gdrive_send_rds_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Send RDS Files to Google Drive — gdrive_send_rds_files","text":"folder_with_files local directory path containing RDS files sent. file types can location - filtered . gdrive_folder folder GDrive want data saved - needs top level, make multi-level.","code":""},{"path":"/reference/gdrive_send_rds_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Send RDS Files to Google Drive — gdrive_send_rds_files","text":"None (invisibly returns NULL)","code":""},{"path":"/reference/gdrive_send_rds_files.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Send RDS Files to Google Drive — gdrive_send_rds_files","text":"","code":"if (FALSE) { # \\dontrun{ # Provide the directory path containing the RDS files folder_with_files <- \"path/to/rds/files\"  # Send the RDS files to Google Drive gdrive_send_rds_files(folder_with_files) } # }"},{"path":"/reference/group_wtd_quantiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate quantiles for groups of pre-aggregated metrics. — group_wtd_quantiles","title":"Calculate quantiles for groups of pre-aggregated metrics. — group_wtd_quantiles","text":"Use function calculate qunatiles data already aggregated collapsed counts. Avoids need expand data compute quantiles.","code":""},{"path":"/reference/group_wtd_quantiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate quantiles for groups of pre-aggregated metrics. — group_wtd_quantiles","text":"","code":"group_wtd_quantiles(   df,   value,   weight = \"count\",   quantiles = c(0, 0.25, 0.5, 0.75, 1) )"},{"path":"/reference/group_wtd_quantiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate quantiles for groups of pre-aggregated metrics. — group_wtd_quantiles","text":"df dataframe data value string column qunatiles calculated weight string column used calculate quantiles quantiles vector quantiles returned - default `c(0, .25, .5, .75, 1)` quantiles","code":""},{"path":"/reference/group_wtd_quantiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate quantiles for groups of pre-aggregated metrics. — group_wtd_quantiles","text":"dataframe qunatiles - wide format","code":""},{"path":"/reference/group_wtd_quantiles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate quantiles for groups of pre-aggregated metrics. — group_wtd_quantiles","text":"","code":"if (FALSE) { # \\dontrun{ df = data.frame(group = c(rep(1, 4)                           ,rep(2, 3))                 ,days = c(round(runif(4, 0, 20), 0)                           ,round(runif(3, 0, 20), 0))                 ,count = c(round(runif(4, 0, 5), 0)                            ,round(runif(3, 0, 5), 0)))  df %>%   group_by(group) %>%   nest() %>%   mutate(qauntiles = map(data, ~group_wtd_quantiles(.x, value = \"days\", weight = \"count\"))) %>%   unnest(cols = c(qauntiles)) %>%   select(!data)  #alternative calucaltion by expansion rep(df$days[1:4], df$count[1:4]) %>%  summary() } # }"},{"path":"/reference/knit_dashboard.html","id":null,"dir":"Reference","previous_headings":"","what":"Automate knitting of RMD FlexDashboards to HTML. — knit_dashboard","title":"Automate knitting of RMD FlexDashboards to HTML. — knit_dashboard","text":"Use function knit RMD FlexDashboards HTMLs write new location different name.","code":""},{"path":"/reference/knit_dashboard.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Automate knitting of RMD FlexDashboards to HTML. — knit_dashboard","text":"","code":"knit_dashboard(   dashboard_name = \"dashboard\",   dashboard_folder = \"dashboard\",   doc_name = dashboard_name,   overwrite = F,   write_to_folder = \"public\" )"},{"path":"/reference/knit_dashboard.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Automate knitting of RMD FlexDashboards to HTML. — knit_dashboard","text":"dashboard_name string RMD knit - include `.RMD` extension. dashboard_folder string folder name RMD located - default `analysis`, include trailing `(/)`. doc_name string knitted RMD name - default `markdown_name`. overwrite boolean (`TRUE`/`FALSE`) indicating file rewritten date suffix added file name - default `FALSE` adds date suffix. write_to_folder string folder name RMD written - default `public`.","code":""},{"path":"/reference/knit_dashboard.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Automate knitting of RMD FlexDashboards to HTML. — knit_dashboard","text":"knitted HTML document","code":""},{"path":"/reference/knit_dashboard.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Automate knitting of RMD FlexDashboards to HTML. — knit_dashboard","text":"","code":"#none"},{"path":"/reference/knit_markdown.html","id":null,"dir":"Reference","previous_headings":"","what":"Automate knitting of RMD to HTML. — knit_markdown","title":"Automate knitting of RMD to HTML. — knit_markdown","text":"Use function knit RMDs HTMLs write new location different name.","code":""},{"path":"/reference/knit_markdown.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Automate knitting of RMD to HTML. — knit_markdown","text":"","code":"knit_markdown(   markdown_name,   markdown_folder = \"analysis\",   doc_name = markdown_name,   overwrite = F,   clean = TRUE,   write_to_folder = \"public\" )"},{"path":"/reference/knit_markdown.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Automate knitting of RMD to HTML. — knit_markdown","text":"markdown_name string RMD knit - include `.RMD` extension. markdown_folder string folder name RMD located - default `analysis`. doc_name string knitted RMD name - default `markdown_name`. overwrite boolean (`TRUE`/`FALSE`) indicating file rewritten date suffix added file name - default `FALSE` adds date suffix. clean boolean (`TRUE`/`FALSE`) - keep default `TRUE` write_to_folder string folder name RMD written - default `public`.","code":""},{"path":"/reference/knit_markdown.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Automate knitting of RMD to HTML. — knit_markdown","text":"knitted HTML document","code":""},{"path":"/reference/knit_markdown.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Automate knitting of RMD to HTML. — knit_markdown","text":"","code":"#none"},{"path":"/reference/lmt0.html","id":null,"dir":"Reference","previous_headings":"","what":"Limit to Non-Negative Values — lmt0","title":"Limit to Non-Negative Values — lmt0","text":"function takes numeric vector replaces negative values zero.","code":""},{"path":"/reference/lmt0.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Limit to Non-Negative Values — lmt0","text":"","code":"lmt0(x)"},{"path":"/reference/lmt0.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Limit to Non-Negative Values — lmt0","text":"x numeric vector.","code":""},{"path":"/reference/lmt0.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Limit to Non-Negative Values — lmt0","text":"numeric vector non-negative values.","code":""},{"path":"/reference/lmt0.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Limit to Non-Negative Values — lmt0","text":"","code":"lmt0(c(5, 6, 2, 0, -1)) #> [1] 5 6 2 0 0"},{"path":"/reference/log_and_fatal.html","id":null,"dir":"Reference","previous_headings":"","what":"Log and print to console an info message. — log_and_fatal","title":"Log and print to console an info message. — log_and_fatal","text":"Log print console info message.","code":""},{"path":"/reference/log_and_fatal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log and print to console an info message. — log_and_fatal","text":"","code":"log_and_fatal(message, logger)"},{"path":"/reference/log_and_fatal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log and print to console an info message. — log_and_fatal","text":"message string message print. logger logger object made using log4r package.","code":""},{"path":"/reference/log_and_fatal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log and print to console an info message. — log_and_fatal","text":"message printed console log file logged message","code":""},{"path":"/reference/log_and_fatal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Log and print to console an info message. — log_and_fatal","text":"","code":"#none"},{"path":"/reference/log_and_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Log and print to console an info message. — log_and_info","title":"Log and print to console an info message. — log_and_info","text":"Log print console info message.","code":""},{"path":"/reference/log_and_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log and print to console an info message. — log_and_info","text":"","code":"log_and_info(message, logger)"},{"path":"/reference/log_and_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log and print to console an info message. — log_and_info","text":"message string message print. logger logger object made using log4r package.","code":""},{"path":"/reference/log_and_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log and print to console an info message. — log_and_info","text":"message printed console log file logged message","code":""},{"path":"/reference/log_and_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Log and print to console an info message. — log_and_info","text":"","code":"#none"},{"path":"/reference/log_and_warn.html","id":null,"dir":"Reference","previous_headings":"","what":"Log and print to console a warn message. — log_and_warn","title":"Log and print to console a warn message. — log_and_warn","text":"Log print console warn message.","code":""},{"path":"/reference/log_and_warn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log and print to console a warn message. — log_and_warn","text":"","code":"log_and_warn(message, logger)"},{"path":"/reference/log_and_warn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log and print to console a warn message. — log_and_warn","text":"message string message print. logger logger object made using log4r package.","code":""},{"path":"/reference/log_and_warn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log and print to console a warn message. — log_and_warn","text":"message printed console log file logged message","code":""},{"path":"/reference/log_and_warn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Log and print to console a warn message. — log_and_warn","text":"","code":"#none"},{"path":"/reference/make_diff.html","id":null,"dir":"Reference","previous_headings":"","what":"make_diff — make_diff","title":"make_diff — make_diff","text":"Makes difference column dataframe column defined user using lags defined user. used directly user - better use via auto_make_diff_col() function.","code":""},{"path":"/reference/make_diff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"make_diff — make_diff","text":"","code":"make_diff(col, lags, percent = F)"},{"path":"/reference/make_diff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"make_diff — make_diff","text":"col column make lags lags numeric list percent boolean determine difference percent difference","code":""},{"path":"/reference/make_diff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"make_diff — make_diff","text":"dataframe differenced column","code":""},{"path":"/reference/make_diff.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"make_diff — make_diff","text":"","code":"if (FALSE) { # \\dontrun{ data.frame(index = 1:10,           value1 = rnorm(10), value2 = rnorm(10)) %>%  mutate(value1_differenced = make_diff(col = index, c(1), percent = F)) %>%  mutate(value1_differenced_percent = make_diff(col = index, c(1), percent = T))  } # }"},{"path":"/reference/make_dir_prfx_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a directory with a prefix and date — make_dir_prfx_date","title":"Create a directory with a prefix and date — make_dir_prfx_date","text":"function creates directory specified prefix current date.","code":""},{"path":"/reference/make_dir_prfx_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a directory with a prefix and date — make_dir_prfx_date","text":"","code":"make_dir_prfx_date(directory_location, prefix)"},{"path":"/reference/make_dir_prfx_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a directory with a prefix and date — make_dir_prfx_date","text":"directory_location string specifying location directory create. prefix string specifying prefix use directory name.","code":""},{"path":"/reference/make_dir_prfx_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a directory with a prefix and date — make_dir_prfx_date","text":"string specifying path created directory.","code":""},{"path":"/reference/make_dir_prfx_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a directory with a prefix and date — make_dir_prfx_date","text":"","code":"if (FALSE) { # \\dontrun{ #' make_dir_prfx_date(\"data/processed\", \"my_data_\") make_dir_prfx_date(\"data/raw\", \"my_data_\") } # }"},{"path":"/reference/make_lag_col.html","id":null,"dir":"Reference","previous_headings":"","what":"make_lag_col — make_lag_col","title":"make_lag_col — make_lag_col","text":"Pre-filled lag function. function directly used, used inside auto_make_lag_col function.","code":""},{"path":"/reference/make_lag_col.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"make_lag_col — make_lag_col","text":"","code":"make_lag_col(lags = c(1, 7))"},{"path":"/reference/make_lag_col.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"make_lag_col — make_lag_col","text":"lags numeric list","code":""},{"path":"/reference/make_lag_col.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"make_lag_col — make_lag_col","text":"pre-filled function","code":""},{"path":"/reference/make_lag_col.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"make_lag_col — make_lag_col","text":"","code":"if (FALSE) { # \\dontrun{ #none } # }"},{"path":"/reference/make_new_rmd.html","id":null,"dir":"Reference","previous_headings":"","what":"Make new Rmd script from template. — make_new_rmd","title":"Make new Rmd script from template. — make_new_rmd","text":"function copies Rmd script template `gauntlet` package writes new location defined user. Write-folder locations must exist running code.","code":""},{"path":"/reference/make_new_rmd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make new Rmd script from template. — make_new_rmd","text":"","code":"make_new_rmd(folder = \"analysis\", file_name = NULL)"},{"path":"/reference/make_new_rmd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make new Rmd script from template. — make_new_rmd","text":"folder string name (defaults `analysis` folder) file_name string name (include .Rmd extension)","code":""},{"path":"/reference/make_new_rmd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make new Rmd script from template. — make_new_rmd","text":"Rmd location name chosen user","code":""},{"path":"/reference/make_new_rmd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make new Rmd script from template. — make_new_rmd","text":"","code":"#none"},{"path":"/reference/make_new_script.html","id":null,"dir":"Reference","previous_headings":"","what":"Make new R script from template. — make_new_script","title":"Make new R script from template. — make_new_script","text":"function copies R script template `gauntlet` package writes new location defined user. Write-folder locations must exist running code.","code":""},{"path":"/reference/make_new_script.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make new R script from template. — make_new_script","text":"","code":"make_new_script(folder = \"code\", file_name = NULL)"},{"path":"/reference/make_new_script.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make new R script from template. — make_new_script","text":"folder string name file_name string name (include .r extentsion)","code":""},{"path":"/reference/make_new_script.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make new R script from template. — make_new_script","text":"script location name choosen user","code":""},{"path":"/reference/make_new_script.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make new R script from template. — make_new_script","text":"","code":"#none"},{"path":"/reference/make_rMean_col.html","id":null,"dir":"Reference","previous_headings":"","what":"make_rMean_col — make_rMean_col","title":"make_rMean_col — make_rMean_col","text":"Pre-filled rolling mean function. function directly used, used inside auto_make_rMean_col() .","code":""},{"path":"/reference/make_rMean_col.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"make_rMean_col — make_rMean_col","text":"","code":"make_rMean_col(width, equal)"},{"path":"/reference/make_rMean_col.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"make_rMean_col — make_rMean_col","text":"width integer input indicating size sliding window used calculate mean equal currently used","code":""},{"path":"/reference/make_rMean_col.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"make_rMean_col — make_rMean_col","text":"pre-filled function","code":""},{"path":"/reference/make_rMean_col.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"make_rMean_col — make_rMean_col","text":"","code":"if (FALSE) { # \\dontrun{ #none } # }"},{"path":"/reference/normalize_min_max.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Min-Max normalization to a numeric vector. — normalize_min_max","title":"Apply Min-Max normalization to a numeric vector. — normalize_min_max","text":"Apply Min-Max normalization numeric vector.","code":""},{"path":"/reference/normalize_min_max.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Min-Max normalization to a numeric vector. — normalize_min_max","text":"","code":"normalize_min_max(x, na.rm = TRUE)"},{"path":"/reference/normalize_min_max.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Min-Max normalization to a numeric vector. — normalize_min_max","text":"x numeric vector. Works tidyverse mututate function. na.rm boolean(TRUE/FALSE)","code":""},{"path":"/reference/normalize_min_max.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Min-Max normalization to a numeric vector. — normalize_min_max","text":"normalized numeric vector.","code":""},{"path":"/reference/normalize_min_max.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply Min-Max normalization to a numeric vector. — normalize_min_max","text":"","code":"if (FALSE) { # \\dontrun{ mtcars %>%   mutate(hp_norm = normalize_min_max(hp))   } # }"},{"path":"/reference/package_load.html","id":null,"dir":"Reference","previous_headings":"","what":"Load many packages. — package_load","title":"Load many packages. — package_load","text":"Function loads R libraries listed string vector. Compatable targets formatting style.","code":""},{"path":"/reference/package_load.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load many packages. — package_load","text":"","code":"package_load(pkg)"},{"path":"/reference/package_load.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load many packages. — package_load","text":"pkg vector string libraries.","code":""},{"path":"/reference/package_load.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load many packages. — package_load","text":"message detailing successful unsuccessful loaded packages","code":""},{"path":"/reference/package_load.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load many packages. — package_load","text":"","code":"if (FALSE) { # \\dontrun{ packages = c(\"dplyr\", \"ggplot\")  package_load(packages) } # }"},{"path":"/reference/print_named_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert named list to string — print_named_list","title":"Convert named list to string — print_named_list","text":"function converts named list string, element list separate line name.","code":""},{"path":"/reference/print_named_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert named list to string — print_named_list","text":"","code":"print_named_list(my_list)"},{"path":"/reference/print_named_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert named list to string — print_named_list","text":"my_list named list converted string.","code":""},{"path":"/reference/print_named_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert named list to string — print_named_list","text":"string element list separate line name.","code":""},{"path":"/reference/print_named_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert named list to string — print_named_list","text":"","code":"my_list <- list(a = 1, b = 2, c = 3) print_named_list(my_list) #> [1] \"a: 1\\nb: 2\\nc: 3\\n\""},{"path":"/reference/quick_date_rng.html","id":null,"dir":"Reference","previous_headings":"","what":"Quick Date Range — quick_date_rng","title":"Quick Date Range — quick_date_rng","text":"Function returns min max date values given month input user. Mostly, create date ranges plots.","code":""},{"path":"/reference/quick_date_rng.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quick Date Range — quick_date_rng","text":"","code":"quick_date_rng(mon = 6)"},{"path":"/reference/quick_date_rng.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quick Date Range — quick_date_rng","text":"mon integer input.","code":""},{"path":"/reference/quick_date_rng.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quick Date Range — quick_date_rng","text":"vector dates","code":""},{"path":"/reference/quick_date_rng.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Quick Date Range — quick_date_rng","text":"","code":"if (FALSE) { # \\dontrun{ quick_date_rng()  quick_date_rng(month = 3) } # }"},{"path":"/reference/read_csv_allFiles2.html","id":null,"dir":"Reference","previous_headings":"","what":"Read multiple csv files in singular folder. — read_csv_allFiles2","title":"Read multiple csv files in singular folder. — read_csv_allFiles2","text":"function can used read many files . Intended read file written multiple times using different date suffix. Example: data queried daily needs saved bu analyzed together.","code":""},{"path":"/reference/read_csv_allFiles2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read multiple csv files in singular folder. — read_csv_allFiles2","text":"","code":"read_csv_allFiles2(   data_location = \"data\",   specifically = NULL,   clean = F,   clean_string = NULL,   latest = F )"},{"path":"/reference/read_csv_allFiles2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read multiple csv files in singular folder. — read_csv_allFiles2","text":"data_location string defines folder data - omit trailing `/`. Default set `/data/`. specifically string used reprex filter files - use limit files read. clean boolean clean data - BROKEN, always keep default `FALSE`. clean_string string indicating string removed file name naming list entries. latest boolean (T/F) indicating function load latest data - usually latest file name string date.","code":""},{"path":"/reference/read_csv_allFiles2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read multiple csv files in singular folder. — read_csv_allFiles2","text":"named list dataframes","code":""},{"path":"/reference/read_csv_allFiles2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read multiple csv files in singular folder. — read_csv_allFiles2","text":"","code":"#none"},{"path":"/reference/read_rds_allFiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Read multiple RDS files in singular folder. — read_rds_allFiles","title":"Read multiple RDS files in singular folder. — read_rds_allFiles","text":"function can used read many files . Intended read file written multiple times using different date suffix. Example: data queried daily needs saved bu analyzed together.","code":""},{"path":"/reference/read_rds_allFiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read multiple RDS files in singular folder. — read_rds_allFiles","text":"","code":"read_rds_allFiles(   data_location = \"data\",   specifically = NULL,   clean = F,   clean_string = NULL,   latest = F )"},{"path":"/reference/read_rds_allFiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read multiple RDS files in singular folder. — read_rds_allFiles","text":"data_location string defines folder data - omit trailing `/`. Default set `/data/`. specifically string used reprex filter files - use limit files read. clean boolean clean data - BROKEN, always keep default `FALSE`. clean_string string indicating string removed file name naming list entries. latest boolean (T/F) indicating function load latest data - usually latest file name string date.","code":""},{"path":"/reference/read_rds_allFiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read multiple RDS files in singular folder. — read_rds_allFiles","text":"named list dataframes","code":""},{"path":"/reference/read_rds_allFiles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read multiple RDS files in singular folder. — read_rds_allFiles","text":"","code":"#none"},{"path":"/reference/read_xlsx_allFiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Read multiple RDS files in singular folder. — read_xlsx_allFiles","title":"Read multiple RDS files in singular folder. — read_xlsx_allFiles","text":"function can used read many files . Intended read file written multiple times using different date suffix. Example: data queried daily needs saved bu analyzed together.","code":""},{"path":"/reference/read_xlsx_allFiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read multiple RDS files in singular folder. — read_xlsx_allFiles","text":"","code":"read_xlsx_allFiles(   data_location = \"./data/\",   specifically = NULL,   clean = F,   clean_string = NULL,   sheet = sheet,   latest = F )"},{"path":"/reference/read_xlsx_allFiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read multiple RDS files in singular folder. — read_xlsx_allFiles","text":"data_location string defines folder data - omit trailing `/`. Default set `/data/`. specifically string used reprex filter files - use limit files read. clean boolean clean data - BROKEN, always keep default `FALSE`. clean_string string indicating string removed file name naming list entries. sheet string indicating sheet import latest boolean (T/F) indicating function load latest data - usually latest file name string date.","code":""},{"path":"/reference/read_xlsx_allFiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read multiple RDS files in singular folder. — read_xlsx_allFiles","text":"named list dataframes","code":""},{"path":"/reference/read_xlsx_allFiles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read multiple RDS files in singular folder. — read_xlsx_allFiles","text":"","code":"#none"},{"path":"/reference/remindMe_function_doc_prompt.html","id":null,"dir":"Reference","previous_headings":"","what":"Print basic LLM prompt for function docummnetation. — remindMe_function_doc_prompt","title":"Print basic LLM prompt for function docummnetation. — remindMe_function_doc_prompt","text":"Print basic LLM prompt function docummnetation.","code":""},{"path":"/reference/remindMe_function_doc_prompt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print basic LLM prompt for function docummnetation. — remindMe_function_doc_prompt","text":"","code":"remindMe_function_doc_prompt()"},{"path":"/reference/remindMe_function_doc_prompt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print basic LLM prompt for function docummnetation. — remindMe_function_doc_prompt","text":"None (prints console).","code":""},{"path":"/reference/remindMe_function_doc_prompt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print basic LLM prompt for function docummnetation. — remindMe_function_doc_prompt","text":"","code":"if (FALSE) { # \\dontrun{ remindMe_packages_to_use()  } # }"},{"path":"/reference/remindMe_gitIgnore.html","id":null,"dir":"Reference","previous_headings":"","what":"Print basic to console basic tryCatch template — remindMe_gitIgnore","title":"Print basic to console basic tryCatch template — remindMe_gitIgnore","text":"Print basic console basic tryCatch template","code":""},{"path":"/reference/remindMe_gitIgnore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print basic to console basic tryCatch template — remindMe_gitIgnore","text":"","code":"remindMe_gitIgnore()"},{"path":"/reference/remindMe_gitIgnore.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print basic to console basic tryCatch template — remindMe_gitIgnore","text":"None (prints console).","code":""},{"path":"/reference/remindMe_gitIgnore.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print basic to console basic tryCatch template — remindMe_gitIgnore","text":"","code":"if (FALSE) { # \\dontrun{ remindMe_gitIgnore()  } # }"},{"path":"/reference/remindMe_packages_to_use.html","id":null,"dir":"Reference","previous_headings":"","what":"Print basic packages that to use template — remindMe_packages_to_use","title":"Print basic packages that to use template — remindMe_packages_to_use","text":"Print basic packages use template","code":""},{"path":"/reference/remindMe_packages_to_use.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print basic packages that to use template — remindMe_packages_to_use","text":"","code":"remindMe_packages_to_use()"},{"path":"/reference/remindMe_packages_to_use.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print basic packages that to use template — remindMe_packages_to_use","text":"None (prints console).","code":""},{"path":"/reference/remindMe_packages_to_use.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print basic packages that to use template — remindMe_packages_to_use","text":"","code":"if (FALSE) { # \\dontrun{ remindMe_packages_to_use()  } # }"},{"path":"/reference/remindMe_trycatch.html","id":null,"dir":"Reference","previous_headings":"","what":"Print basic to console basic tryCatch template — remindMe_trycatch","title":"Print basic to console basic tryCatch template — remindMe_trycatch","text":"Print basic console basic tryCatch template","code":""},{"path":"/reference/remindMe_trycatch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print basic to console basic tryCatch template — remindMe_trycatch","text":"","code":"remindMe_trycatch()"},{"path":"/reference/remindMe_trycatch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print basic to console basic tryCatch template — remindMe_trycatch","text":"None (prints console).","code":""},{"path":"/reference/remindMe_trycatch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print basic to console basic tryCatch template — remindMe_trycatch","text":"","code":"remindMe_trycatch() #> ++++++++++++++++++++++++++++++++++++++++++++++++++ #> Printing two examples of common tryCatches #> ++++++++++++++++++++++++++++++++++++++++++++++++++ #>  #> p = 8 #> p = \"string\" #>  #> tryCatch({ #>   8 + p #> }, error = function(err) { #>   message(\"An error orccured....\") #>   print(err$message) #> }) #>  #>  #> tt = tryCatch({ #>   temp = 8 + p #>   return(temp) #> }, error = function(err) { #>   print(err$message) #>   temp = NULL #>   return(temp) #> }) #> print(tt)"},{"path":"/reference/remove_reversed_dupe_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove Reversed Duplicate Rows from a Data Frame — remove_reversed_dupe_cols","title":"Remove Reversed Duplicate Rows from a Data Frame — remove_reversed_dupe_cols","text":"function removes rows data frame two specified columns reversed duplicate values. identifies pairs columns contain values reverse order, retains one instance pair.","code":""},{"path":"/reference/remove_reversed_dupe_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove Reversed Duplicate Rows from a Data Frame — remove_reversed_dupe_cols","text":"","code":"remove_reversed_dupe_cols(df, col1, col2)"},{"path":"/reference/remove_reversed_dupe_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove Reversed Duplicate Rows from a Data Frame — remove_reversed_dupe_cols","text":"df data frame containing data processed. col1 name first column check reversed duplicates. col2 name second column check reversed duplicates.","code":""},{"path":"/reference/remove_reversed_dupe_cols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove Reversed Duplicate Rows from a Data Frame — remove_reversed_dupe_cols","text":"data frame reversed duplicate rows removed.","code":""},{"path":"/reference/remove_reversed_dupe_cols.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Remove Reversed Duplicate Rows from a Data Frame — remove_reversed_dupe_cols","text":"useful cleaning data order elements two columns matter, undirected networks paired observations.","code":""},{"path":"/reference/remove_reversed_dupe_cols.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove Reversed Duplicate Rows from a Data Frame — remove_reversed_dupe_cols","text":"","code":"if (FALSE) { # \\dontrun{ # Create a sample data frame df <- data.frame(   var_1 = c(1, 2, 3, 4, 2) %>% paste0(\"street_\", .),   var_2 = c(2, 1, 4, 3, 1) %>% paste0(\"street_\", .) )  # Remove reversed duplicates cleaned_df <- remove_reversed_dupe_cols(df, \"var_1\", \"var_2\")  } # }"},{"path":"/reference/robust_prompt_used.html","id":null,"dir":"Reference","previous_headings":"","what":"Ask user for T/F input with user defined prompt. — robust_prompt_used","title":"Ask user for T/F input with user defined prompt. — robust_prompt_used","text":"function prompts user message asking whether want perform specific action. function accepts user's response handles invalid input prompting user .","code":""},{"path":"/reference/robust_prompt_used.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ask user for T/F input with user defined prompt. — robust_prompt_used","text":"","code":"robust_prompt_used(prompt)"},{"path":"/reference/robust_prompt_used.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ask user for T/F input with user defined prompt. — robust_prompt_used","text":"prompt character string indicating action performed.","code":""},{"path":"/reference/robust_prompt_used.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ask user for T/F input with user defined prompt. — robust_prompt_used","text":"logical value indicating whether user elected perform specified action. Returns TRUE user entered \"Y\", FALSE user entered \"N\".","code":""},{"path":"/reference/robust_prompt_used.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ask user for T/F input with user defined prompt. — robust_prompt_used","text":"","code":"if (FALSE) { # \\dontrun{ robust_prompt_used(\"continue with the analysis\") } # }"},{"path":"/reference/roll_mad.html","id":null,"dir":"Reference","previous_headings":"","what":"Make MAD (median absolute deviation) values. — roll_mad","title":"Make MAD (median absolute deviation) values. — roll_mad","text":"Function computes MAD statistic(s) numeric vector. values vector used create MAD statistic. MAD values last entry alone can returned.","code":""},{"path":"/reference/roll_mad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make MAD (median absolute deviation) values. — roll_mad","text":"","code":"roll_mad(values, last = F)"},{"path":"/reference/roll_mad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make MAD (median absolute deviation) values. — roll_mad","text":"values vector numeric values MAD. last boolean - determines last value returned. Default `FALSE`.","code":""},{"path":"/reference/roll_mad.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make MAD (median absolute deviation) values. — roll_mad","text":"returns single MAD value last value vector","code":""},{"path":"/reference/roll_mad.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make MAD (median absolute deviation) values. — roll_mad","text":"","code":"if (FALSE) { # \\dontrun{ numeric_vector = c(rnorm(10, 10, 3), 100)  roll_mad(numeric_vector)  roll_mad(numeric_vector, last = T)  #compare to zscore scale(numeric_vector)[,1] } # }"},{"path":"/reference/shiny_box_common.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a standardized box for UI elements in Shiny applications — shiny_box_common","title":"Create a standardized box for UI elements in Shiny applications — shiny_box_common","text":"function generates standard box UI elements Shiny applications. includes commonly used parameters, making convenient create consistent box structures without repeatedly specifying inputs.","code":""},{"path":"/reference/shiny_box_common.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a standardized box for UI elements in Shiny applications — shiny_box_common","text":"","code":"shiny_box_common(title = NA, object_in_box = NA, collapsed = FALSE)"},{"path":"/reference/shiny_box_common.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a standardized box for UI elements in Shiny applications — shiny_box_common","text":"title title box (default NA). object_in_box UI elements placed inside box (default NA). collapsed Logical indicating whether box initially collapsed (default FALSE).","code":""},{"path":"/reference/shiny_box_common.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a standardized box for UI elements in Shiny applications — shiny_box_common","text":"standardized Shiny box specified parameters.","code":""},{"path":[]},{"path":"/reference/shiny_box_common.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a standardized box for UI elements in Shiny applications — shiny_box_common","text":"","code":"if (FALSE) { # \\dontrun{   # Create a standard box with a title and UI elements   shiny_box_common(title = \"Example Box\", object_in_box = fluidRow(plotOutput(\"plot\"))) } # }"},{"path":"/reference/shiny_bs_popover.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Shiny button with popover message — shiny_bs_popover","title":"Create a Shiny button with popover message — shiny_bs_popover","text":"function generates Shiny button along popover message. button, pressed hovered (based specified trigger), displays popover message provided title text. default behavior show info-style message question mark icon.","code":""},{"path":"/reference/shiny_bs_popover.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Shiny button with popover message — shiny_bs_popover","text":"","code":"shiny_bs_popover(id, title, text, trigger = \"hover\")"},{"path":"/reference/shiny_bs_popover.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Shiny button with popover message — shiny_bs_popover","text":"id unique identifier button popover. title title popover message. text text content popover message. trigger trigger displaying popover (default \"hover\").","code":""},{"path":"/reference/shiny_bs_popover.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Shiny button with popover message — shiny_bs_popover","text":"Shiny tagList containing button popover components.","code":""},{"path":[]},{"path":"/reference/shiny_bs_popover.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Shiny button with popover message — shiny_bs_popover","text":"","code":"if (FALSE) { # \\dontrun{   shiny_bs_popover(id = \"example_button\", title = \"Information\",                    text = \"This is an example popover message.\") } # }"},{"path":"/reference/shiny_get_list_items.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract specific elements from the Shiny input list — shiny_get_list_items","title":"Extract specific elements from the Shiny input list — shiny_get_list_items","text":"function takes master Shiny input list given time extracts list elements matching names based suffix /string pattern. provides convenient way users obtain instantaneous values specific input elements troubleshooting purposes.","code":""},{"path":"/reference/shiny_get_list_items.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract specific elements from the Shiny input list — shiny_get_list_items","text":"","code":"shiny_get_list_items(input_list, suffix = NA, string, purrr = TRUE)"},{"path":"/reference/shiny_get_list_items.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract specific elements from the Shiny input list — shiny_get_list_items","text":"input_list Shiny input list extract elements . suffix optional suffix filter input elements. string string pattern filter input elements. purrr Logical indicating whether use purrr-style functions filtering.","code":""},{"path":"/reference/shiny_get_list_items.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract specific elements from the Shiny input list — shiny_get_list_items","text":"subset input list containing matching elements.","code":""},{"path":[]},{"path":"/reference/shiny_get_list_items.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract specific elements from the Shiny input list — shiny_get_list_items","text":"","code":"if (FALSE) { # \\dontrun{   # Extract input elements with a suffix and matching a string pattern   shiny_get_list_items(input_list = input, suffix = \"numeric\", string = \"slider\") } # }"},{"path":"/reference/shiny_modal.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a convenient Shiny modal for pop-up messages — shiny_modal","title":"Create a convenient Shiny modal for pop-up messages — shiny_modal","text":"function wraps commonly used functions create Shiny modal pop-messages. allows link triggering event message, making easier display pop-messages Shiny applications reduced code repetition.","code":""},{"path":"/reference/shiny_modal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a convenient Shiny modal for pop-up messages — shiny_modal","text":"","code":"shiny_modal(trigger, msg, size = \"l\")"},{"path":"/reference/shiny_modal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a convenient Shiny modal for pop-up messages — shiny_modal","text":"trigger triggering event activates modal. msg message content displayed modal. size size modal (\"s\" small, \"m\" medium, \"l\" large).","code":""},{"path":[]},{"path":"/reference/shiny_modal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a convenient Shiny modal for pop-up messages — shiny_modal","text":"","code":"if (FALSE) { # \\dontrun{   # Create a Shiny modal linked to a triggering event with a message   shiny_modal(trigger = input$button_click, msg = \"Process completed successfully!\") } # }"},{"path":"/reference/shiny_spacer_row.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a blank spacer row for spacing between UI elements — shiny_spacer_row","title":"Create a blank spacer row for spacing between UI elements — shiny_spacer_row","text":"function generates blank spacer row create space UI elements Shiny applications. convenience function inserts fluid row empty box specified height create vertical space.","code":""},{"path":"/reference/shiny_spacer_row.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a blank spacer row for spacing between UI elements — shiny_spacer_row","text":"","code":"shiny_spacer_row(size)"},{"path":"/reference/shiny_spacer_row.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a blank spacer row for spacing between UI elements — shiny_spacer_row","text":"size height blank spacer row.","code":""},{"path":"/reference/shiny_spacer_row.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a blank spacer row for spacing between UI elements — shiny_spacer_row","text":"blank spacer row specified height.","code":""},{"path":[]},{"path":"/reference/shiny_spacer_row.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a blank spacer row for spacing between UI elements — shiny_spacer_row","text":"","code":"if (FALSE) { # \\dontrun{   # Create a spacer row with a specified height   shiny_spacer_row(size = \"20px\") } # }"},{"path":"/reference/strg_clean_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a clean date string of current date with simple punctuation and syntax. — strg_clean_date","title":"Make a clean date string of current date with simple punctuation and syntax. — strg_clean_date","text":"Make clean date string current date simple punctuation syntax.","code":""},{"path":"/reference/strg_clean_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a clean date string of current date with simple punctuation and syntax. — strg_clean_date","text":"","code":"strg_clean_date()"},{"path":"/reference/strg_clean_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a clean date string of current date with simple punctuation and syntax. — strg_clean_date","text":"character string date without bad punctuation","code":""},{"path":"/reference/strg_clean_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a clean date string of current date with simple punctuation and syntax. — strg_clean_date","text":"","code":"if (FALSE) { # \\dontrun{  clean_date() } # }"},{"path":"/reference/strg_clean_datetime.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a clean datetime string of current datetime with simple punctuation and syntax. — strg_clean_datetime","title":"Make a clean datetime string of current datetime with simple punctuation and syntax. — strg_clean_datetime","text":"Make clean datetime string current datetime simple punctuation syntax.","code":""},{"path":"/reference/strg_clean_datetime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a clean datetime string of current datetime with simple punctuation and syntax. — strg_clean_datetime","text":"","code":"strg_clean_datetime(strip = FALSE)"},{"path":"/reference/strg_clean_datetime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a clean datetime string of current datetime with simple punctuation and syntax. — strg_clean_datetime","text":"strip boolean indicate truncate datetime string 15 characters, default F.","code":""},{"path":"/reference/strg_clean_datetime.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a clean datetime string of current datetime with simple punctuation and syntax. — strg_clean_datetime","text":"character string datetime using underscores","code":""},{"path":"/reference/strg_clean_datetime.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a clean datetime string of current datetime with simple punctuation and syntax. — strg_clean_datetime","text":"","code":"if (FALSE) { # \\dontrun{  clean_datetime() } # }"},{"path":"/reference/strg_col_clean.html","id":null,"dir":"Reference","previous_headings":"","what":"Quickly clean a dataframe's column names — strg_col_clean","title":"Quickly clean a dataframe's column names — strg_col_clean","text":"function cleans data frame removing empty rows columns, converting column names snake_case, replacing specified value NA.","code":""},{"path":"/reference/strg_col_clean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quickly clean a dataframe's column names — strg_col_clean","text":"","code":"strg_col_clean(df, na_marker = \"\")"},{"path":"/reference/strg_col_clean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quickly clean a dataframe's column names — strg_col_clean","text":"df data frame clean. na_marker value replaced NA.","code":""},{"path":"/reference/strg_col_clean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quickly clean a dataframe's column names — strg_col_clean","text":"cleaned data frame.","code":""},{"path":"/reference/strg_col_clean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Quickly clean a dataframe's column names — strg_col_clean","text":"","code":"if (FALSE) { # \\dontrun{ df <- data.frame(A = c(1, NA, 3), B = c(\"apple\", \"orange\", \"\"), C = c(\"\", \"banana\", \"\")) strg_col_clean(df, \"\")  } # }"},{"path":"/reference/strg_fun_eval.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate a string as a command — strg_fun_eval","title":"Evaluate a string as a command — strg_fun_eval","text":"Takes string evaluates R command.","code":""},{"path":"/reference/strg_fun_eval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate a string as a command — strg_fun_eval","text":"","code":"strg_fun_eval(text)"},{"path":"/reference/strg_fun_eval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate a string as a command — strg_fun_eval","text":"text character string representing R command evaluate.","code":""},{"path":"/reference/strg_fun_eval.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate a string as a command — strg_fun_eval","text":"result evaluating R command.","code":""},{"path":"/reference/strg_fun_eval.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluate a string as a command — strg_fun_eval","text":"","code":"if (FALSE) { # \\dontrun{ strg_fun_eval(\"1 + 1\") strg_fun_eval(\"mean(c(1, 2, 3))\")  } # }"},{"path":"/reference/strg_make_space_2.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a string of repeated characters for indentation purposes — strg_make_space_2","title":"Create a string of repeated characters for indentation purposes — strg_make_space_2","text":"function creates string specified length containing specified character. commonly used create indentation printed output.","code":""},{"path":"/reference/strg_make_space_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a string of repeated characters for indentation purposes — strg_make_space_2","text":"","code":"strg_make_space_2(with = \"+\", n = 50, c = \"\", last = T)"},{"path":"/reference/strg_make_space_2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a string of repeated characters for indentation purposes — strg_make_space_2","text":"character repeat. n integer specifying number times repeat character. c string separate repeated character. Defaults empty string. last boolean indicating whether resulting string end newline character. Defaults TRUE.","code":""},{"path":"/reference/strg_make_space_2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a string of repeated characters for indentation purposes — strg_make_space_2","text":"string repeated characters separated specified separator string.","code":""},{"path":"/reference/strg_make_space_2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a string of repeated characters for indentation purposes — strg_make_space_2","text":"","code":"if (FALSE) { # \\dontrun{ make_space_2(n = 5, with = \" \") make_space_2(n = 5, with = \"-\", c = \"\", last = FALSE)  } # }"},{"path":"/reference/strg_numeric_order.html","id":null,"dir":"Reference","previous_headings":"","what":"Order factor levels numerically — strg_numeric_order","title":"Order factor levels numerically — strg_numeric_order","text":"`strg_numeric_order` orders factor levels numerically based values input vector. `rev` set `TRUE`, levels reversed.","code":""},{"path":"/reference/strg_numeric_order.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Order factor levels numerically — strg_numeric_order","text":"","code":"strg_numeric_order(col, rev = TRUE)"},{"path":"/reference/strg_numeric_order.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Order factor levels numerically — strg_numeric_order","text":"col factor character vector. rev Logical; `TRUE`, reverse order levels.","code":""},{"path":"/reference/strg_numeric_order.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Order factor levels numerically — strg_numeric_order","text":"factor reordered levels.","code":""},{"path":"/reference/strg_numeric_order.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Order factor levels numerically — strg_numeric_order","text":"function useful ensuring factor levels ordered correctly dealing numeric values. leverages `stringr::str_sort` function sort levels.","code":""},{"path":"/reference/strg_numeric_order.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Order factor levels numerically — strg_numeric_order","text":"","code":"if (FALSE) { # \\dontrun{ temp_df = paste0(\"lab_\", seq(1, 50, 2)) %>% data.frame(label_unordered = .            ,label_ordered = strg_numeric_order(.))  temp_df %>% arrange(label_unordered) %>% print() temp_df %>% arrange(desc(label_ordered)) %>% print()  } # }"},{"path":"/reference/strg_parse_args.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse Command Line Arguments — strg_parse_args","title":"Parse Command Line Arguments — strg_parse_args","text":"Parses vector command-line arguments returns named list argument-value pairs. Arguments expected follow format `–key=value`.","code":""},{"path":"/reference/strg_parse_args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse Command Line Arguments — strg_parse_args","text":"","code":"strg_parse_args(args)"},{"path":"/reference/strg_parse_args.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse Command Line Arguments — strg_parse_args","text":"args character vector command-line arguments. argument start `–` followed key optional value, separated `=`.","code":""},{"path":"/reference/strg_parse_args.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse Command Line Arguments — strg_parse_args","text":"named list names keys arguments (without `–`), values corresponding values arguments. argument contain `=`, included returned list.","code":""},{"path":"/reference/strg_parse_args.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse Command Line Arguments — strg_parse_args","text":"","code":"if (FALSE) { # \\dontrun{ # Example usage: args <- c(\"--name=John\", \"--age=30\", \"--country=USA\") parsed_args <- strg_parse_args(args) print(parsed_args) # Output: list(name = \"John\", age = \"30\", country = \"USA\")  } # }"},{"path":"/reference/strg_pretty_char.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a character string pretty — strg_pretty_char","title":"Make a character string pretty — strg_pretty_char","text":"function replaces underscores spaces capitalizes first letter word character string.","code":""},{"path":"/reference/strg_pretty_char.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a character string pretty — strg_pretty_char","text":"","code":"strg_pretty_char(col)"},{"path":"/reference/strg_pretty_char.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a character string pretty — strg_pretty_char","text":"col character string make pretty.","code":""},{"path":"/reference/strg_pretty_char.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a character string pretty — strg_pretty_char","text":"pretty character string.","code":""},{"path":"/reference/strg_pretty_char.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Make a character string pretty — strg_pretty_char","text":"Mostly used making colnames items table pretty.","code":""},{"path":"/reference/strg_pretty_char.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a character string pretty — strg_pretty_char","text":"","code":"if (FALSE) { # \\dontrun{ strg_pretty_char(\"hello_world\") strg_pretty_char(\"the_quick_brown_fox\")  } # }"},{"path":"/reference/strg_pretty_num.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a number pretty for printing — strg_pretty_num","title":"Make a number pretty for printing — strg_pretty_num","text":"function formats number make readable. Large numbers expressed millions billions small numbers rounded.","code":""},{"path":"/reference/strg_pretty_num.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a number pretty for printing — strg_pretty_num","text":"","code":"strg_pretty_num(vector, rnd = 0)"},{"path":"/reference/strg_pretty_num.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a number pretty for printing — strg_pretty_num","text":"vector numeric vector make pretty. rnd number digits round .","code":""},{"path":"/reference/strg_pretty_num.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a number pretty for printing — strg_pretty_num","text":"pretty number string.","code":""},{"path":"/reference/strg_pretty_num.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a number pretty for printing — strg_pretty_num","text":"","code":"if (FALSE) { # \\dontrun{ strg_pretty_num(1234) strg_pretty_num(12345678) strg_pretty_num(-987654321, 2)  } # }"},{"path":"/reference/tar_scan_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Scan File for Target String — tar_scan_file","title":"Scan File for Target String — tar_scan_file","text":"function scans file lines containing specific target strings related `tar_load` commands performs optional manipulations lines, particularly focusing removing `tar_load` commands unused targets.","code":""},{"path":"/reference/tar_scan_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scan File for Target String — tar_scan_file","text":"","code":"tar_scan_file(file, rm_tar_load = TRUE)"},{"path":"/reference/tar_scan_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scan File for Target String — tar_scan_file","text":"file character string specifying path file scanned. rm_tar_load Logical; indicating whether remove lines `tar_load` commands. useful identifying `tar_load` commands used analysis, providing list `tar` objects actually used. Default TRUE.","code":""},{"path":"/reference/tar_scan_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scan File for Target String — tar_scan_file","text":"character vector containing lines file matching criteria specified.","code":""},{"path":"/reference/tar_scan_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scan File for Target String — tar_scan_file","text":"","code":"if (FALSE) { # \\dontrun{ # Scan a file for lines containing `tar_load` commands, remove lines with unused targets, # and print the lines in `tar_load` format. tar_scan_file(\"example.qmd\", rm_tar_load = TRUE)  # Example: Creating temporary files and scanning them temp_dir = tempdir() setwd(temp_dir) tar_lines = \"tar_target(data_ob_1, fake_function_1(data_ob))\\n tar_target(data_ob_2, fake_function_2(data_ob_1))\\n tar_target(data_ob_3, fake_function_3(data_ob_2))\\n tar_target(viz_ob_1, fake_function_4(data_ob_2))\\n tar_target(viz_ob_2, fake_function_5(data_ob_3))\" qmd_lines = \"--- title: 'An Example Dashboard' --- ```{r} tar_load(data_ob_2) tar_load(viz_ob_1) ``` A loaded object showing the data. ```{r} data_ob_2 ``` A loaded object. ```{r} viz_ob_1 ``` An unloaded object. ```{r} viz_ob_2```\" temp_tar_file = file.path(temp_dir, \"_targets.R\") writeLines(tar_lines, temp_tar_file) temp_r_file = file.path(temp_dir, \"temp_r_file.R\") writeLines(qmd_lines, temp_r_file) tar_scan_file(file = temp_r_file) } # }"},{"path":"/reference/ts_mad.html","id":null,"dir":"Reference","previous_headings":"","what":"Make rolling MAD (median absolute deviation) values for dataframe attribute. — ts_mad","title":"Make rolling MAD (median absolute deviation) values for dataframe attribute. — ts_mad","text":"Make rolling MAD (median absolute deviation) values dataframe attribute.","code":""},{"path":"/reference/ts_mad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make rolling MAD (median absolute deviation) values for dataframe attribute. — ts_mad","text":"","code":"ts_mad(data, window = 20)"},{"path":"/reference/ts_mad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make rolling MAD (median absolute deviation) values for dataframe attribute. — ts_mad","text":"data data frame timerseries attribute - attribute must named value work window integer indicating width window","code":""},{"path":"/reference/ts_mad.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make rolling MAD (median absolute deviation) values for dataframe attribute. — ts_mad","text":"dataframe rolling MAD statistic attribute","code":""},{"path":"/reference/ts_mad.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make rolling MAD (median absolute deviation) values for dataframe attribute. — ts_mad","text":"","code":"if (FALSE) { # \\dontrun{ test_data = data.frame(index = 1:53,                       value = c(rnorm(25, 10, 3)                                 ,rnorm(3, 100, 3)                                 ,rnorm(25, 10, 3))) test_data %>%  ts_mad(window = 7)  } # }"},{"path":"/reference/ts_zscore.html","id":null,"dir":"Reference","previous_headings":"","what":"Make rolling zscore attribute from timeseries. — ts_zscore","title":"Make rolling zscore attribute from timeseries. — ts_zscore","text":"Make rolling zscore attribute timeseries.","code":""},{"path":"/reference/ts_zscore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make rolling zscore attribute from timeseries. — ts_zscore","text":"","code":"ts_zscore(data, grp = NULL, width = 7, align = \"right\", threshold = 3)"},{"path":"/reference/ts_zscore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make rolling zscore attribute from timeseries. — ts_zscore","text":"data dataframe containing timeseries attribute grp character list attributes group width integer value indicating widtch window align character indicating side value window aligned. Default `right`, uses past values. options `center` `left`. threshold integer indicating zscore away center function flag value outlier","code":""},{"path":"/reference/ts_zscore.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make rolling zscore attribute from timeseries. — ts_zscore","text":"dataframe zcore zscore_flag attributes","code":""},{"path":"/reference/ts_zscore.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make rolling zscore attribute from timeseries. — ts_zscore","text":"","code":"if (FALSE) { # \\dontrun{ data.frame(index = 1:60, value = c(rnorm(50, 10, 3), rnorm(10, 25, 0))) %>%  na.omit() %>%  ts_zscore(width = 30)  c(10, 30) %>%  map(~data.frame(index = 1:60                  ,value = c(rnorm(50, 10, 3), rnorm(10, 25, 0))) %>%        na.omit() %>%        ts_zscore(width = .x)) %>%  reduce(bind_rows) } # }"}]
