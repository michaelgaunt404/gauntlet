% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/helpers_spatial_sf.R
\name{quick_buffer}
\alias{quick_buffer}
\title{quick_buffer}
\usage{
quick_buffer(
  geo_data,
  to = 4326,
  with = 2781,
  radius = NA,
  endCapStyle = "ROUND",
  joinStyle = "ROUND"
)
}
\arguments{
\item{geo_data}{a spatial object}

\item{to}{the CRS to transform to, default is WGS84 (EPSG code 4326)}

\item{with}{the CRS to transform from, default is UTM zone 55S (EPSG code 2781)}

\item{radius}{the radius of the buffer in the unit of the input CRS, default is NA}

\item{endCapStyle}{the style of the end caps, defaults to "ROUND"}

\item{joinStyle}{the style of the line joints, defaults to "ROUND"}
}
\value{
an sf mulitpolygon object

a spatial object representing the buffer
}
\description{
Easily buffer a spatial object. Primarily used to help convert between lat/long that cannot be buffered to CRS that can be and then back to lat/long.
}
\examples{
#work in progress
Quickly create a buffer around spatial objects

This function creates a buffer around a spatial object with a specified radius.
By default, the buffer is created using a projected coordinate reference system (CRS)
and then transformed back to a geographic CRS.

# Load required libraries
library(sf)
curved_line = st_sfc(
  st_linestring(
    rbind(
      c(-122.68, 45.52)
      ,c(-122.63, 45.55)
      ,c(-122.58, 45.57)
      ,c(-122.55, 45.54)
    ))
  ,crs = 4326) \%>\%
  st_as_sf()

mapview::mapview(curved_line) +
  (quick_buffer(curved_line, radius = 1000) \%>\%
     mapview::mapview())
}
